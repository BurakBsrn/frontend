{"version":3,"sources":["assets/images/users/avatar-5.jpg","components/CustomCollapse.js","components/AttachedFiles.js","pages/dashboard/Tabs/Profile.js","pages/dashboard/Tabs/OnlineUsers.js","pages/dashboard/Tabs/Chats.js","components/SelectContact.js","pages/dashboard/Tabs/Groups.js","pages/dashboard/Tabs/Contacts.js","pages/dashboard/Tabs/Settings.js","pages/dashboard/ChatLeftSidebar.js","components/UserProfileSidebar.js","pages/dashboard/UserChat/UserHead.js","pages/dashboard/UserChat/ImageList.js","pages/dashboard/UserChat/ChatInput.js","pages/dashboard/UserChat/FileList.js","pages/dashboard/UserChat/index.js","pages/dashboard/index.js"],"names":["module","exports","CustomCollapse","props","isOpen","toggleCollapse","t","useTranslation","Fragment","to","onClick","className","CardHeader","id","iconClass","title","Collapse","CardBody","children","AttachedFiles","files","map","file","key","Card","Media","thumbnail","body","name","size","UncontrolledDropdown","DropdownToggle","tag","DropdownMenu","right","DropdownItem","divider","Profile","useState","dropdownOpen","setDropdownOpen","isOpen1","setIsOpen1","isOpen2","setIsOpen2","Dropdown","toggle","src","avatar1","alt","OnlineUsers","dir","responsive","0","items","1024","buttonsDisabled","dotsDisabled","mouseTrackingEnabled","avatar2","avatar4","avatar5","avatar6","Chats","state","searchChat","recentChatList","handleChange","bind","openUserChat","li","document","getElementById","this","active_user","classList","add","prevProps","setState","nextProps","e","target","value","search","conversation","filteredArray","i","length","toLowerCase","includes","toUpperCase","push","chat","preventDefault","index","indexOf","activeUser","chatList","clickedItem","currentli","getElementsByTagName","contains","remove","k","userChat","getElementsByClassName","unread","style","display","InputGroup","InputGroupAddon","addonType","Button","color","type","Input","onChange","placeholder","maxHeight","unRead","isTyping","profilePicture","status","charAt","messages","isImageMessage","isFileMessage","message","time","Component","connect","Chat","setconversationNameInOpenChat","sortedContacts","group","SelectContact","contacts","sortContact","data","reduce","r","error","result","Object","values","contact","child","keyChild","handleCheck","Label","htmlFor","Groups","modal","isOpenCollapse","groups","selectedContact","isOpenAlert","groupName","groupDesc","createGroup","handleChangeGroupName","handleChangeGroupDesc","obj","gourpId","isGroup","isNew","desc","members","setTimeout","contactId","selected","checked","UncontrolledTooltip","placement","Modal","centered","ModalHeader","ModalBody","Form","FormGroup","Alert","rows","ModalFooter","Badge","pill","withTranslation","Contacts","Settings","isOpen3","setIsOpen3","isOpen4","setIsOpen4","defaultChecked","Layout","activeTab","TabContent","TabPane","tabId","users","userSidebar","closeUserSidebar","email","avatar7","openUserSidebar","setFullUser","dropdownOpen1","setDropdownOpen1","Row","Col","sm","xs","closeUserChat","copyallUsers","deleteMessage","ImageList","setisOpen","currentImage","setcurrentImage","images","toggleLightbox","imgMsg","image","mainSrc","onCloseRequest","imageTitle","ChatInput","textMessage","settextMessage","setfile","fileImage","setfileImage","onSubmit","onaddMessage","noGutters","ButtonDropdown","direction","onSelect","emoji","native","handleFileChange","URL","createObjectURL","handleImageChange","accept","FileList","fileName","fileSize","withRouter","ref","useRef","setModal","allUsers","chatMessages","setchatMessages","useEffect","current","recalculate","el","getScrollElement","scrollTop","scrollHeight","filtered","filter","item","isToday","userType","userName","imageMessage","fileMessage","backdrop","messageObj","n","Date","getSeconds","Index"],"mappings":"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","file":"static/js/9.6f90cfb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-5.3e35c39b.jpg\";","import React from 'react';\r\nimport { Collapse, CardBody, CardHeader } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction CustomCollapse(props) {\r\n    const { isOpen, toggleCollapse } = props;\r\n\r\n    /* intilize t variable for multi language implementation */\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <React.Fragment>\r\n                        <Link to=\"#\" onClick={toggleCollapse} className=\"text-dark\" >\r\n                                            <CardHeader id=\"profile-user-headingOne\">\r\n                                                <h5 className=\"font-size-14 m-0\">\r\n                                                    {\r\n                                                        props.iconClass &&<i className={props.iconClass + \" mr-2 align-middle d-inline-block\"}></i>\r\n                                                    }\r\n                                                     {t(props.title)}\r\n                                                    <i className={isOpen ? \"mdi mdi-chevron-up float-right accor-plus-icon\" : \"mdi mdi-chevron-right float-right accor-plus-icon\"}></i>\r\n                                                </h5>\r\n                                            </CardHeader>\r\n                                        </Link>\r\n\r\n                                        <Collapse isOpen={isOpen}>\r\n                                            <CardBody>\r\n                                                {props.children}\r\n                                            </CardBody>\r\n                                        </Collapse>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CustomCollapse;","import React from 'react';\r\nimport { DropdownMenu, DropdownItem, DropdownToggle, Card, Media, UncontrolledDropdown } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction AttachedFiles(props) {\r\n    const files = props.files;\r\n\r\n    /* intilize t variable for multi language implementation */\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                                                files.map((file, key) =>\r\n                                                    <Card key={key} className=\"p-2 border mb-2\">\r\n                                                        <Media className=\"align-items-center\">\r\n                                                            <div className=\"avatar-sm mr-3\">\r\n                                                                <div className=\"avatar-title bg-soft-primary text-primary rounded font-size-20\">\r\n                                                                    <i className={file.thumbnail}></i>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <Media body>\r\n                                                                <div className=\"text-left\">\r\n                                                                    <h5 className=\"font-size-14 mb-1\">{file.name}</h5>\r\n                                                                    <p className=\"text-muted font-size-13 mb-0\">{file.size}</p>\r\n                                                                </div>\r\n                                                            </Media>\r\n\r\n                                                            <div className=\"ml-4\">\r\n                                                                <ul className=\"list-inline mb-0 font-size-18\">\r\n                                                                    <li className=\"list-inline-item\">\r\n                                                                        <Link to=\"#\" className=\"text-muted px-1\">\r\n                                                                            <i className=\"ri-download-2-line\"></i>\r\n                                                                        </Link>\r\n                                                                    </li>\r\n                                                                    <UncontrolledDropdown className=\"list-inline-item\">\r\n                                                                        <DropdownToggle  className=\"text-muted px-1\" tag=\"a\">\r\n                                                                            <i className=\"ri-more-fill\"></i>\r\n                                                                        </DropdownToggle >\r\n                                                                        <DropdownMenu right>\r\n                                                                        <DropdownItem>{t('Action')}</DropdownItem>\r\n                                                                        <DropdownItem>{t('Another Action')}</DropdownItem>\r\n                                                                        <DropdownItem divider />\r\n                                                                        <DropdownItem>{t('Delete')}</DropdownItem>\r\n                                                                        </DropdownMenu>\r\n                                                                    </UncontrolledDropdown>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </Media>\r\n                                                    </Card>\r\n                                                )\r\n                                            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AttachedFiles;","import React, { useState } from 'react';\r\nimport { Dropdown, DropdownMenu, DropdownItem, DropdownToggle, Card } from \"reactstrap\";\r\n\r\n//Import components\r\nimport CustomCollapse from \"../../../components/CustomCollapse\";\r\nimport AttachedFiles from \"../../../components/AttachedFiles\";\r\n\r\n//Import Images\r\nimport avatar1 from \"../../../assets/images/users/avatar-1.jpg\";\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction Profile(props) {\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [isOpen1, setIsOpen1] = useState(true);\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const [files] = useState([\r\n        { name : \"Admin-A.zip\", size : \"12.5 MB\", thumbnail : \"ri-file-text-fill\" },\r\n        { name : \"Image-1.jpg\", size : \"4.2 MB\", thumbnail : \"ri-image-fill\" },\r\n        { name : \"Image-2.jpg\", size : \"3.1 MB\", thumbnail : \"ri-image-fill\" },\r\n        { name : \"Landing-A.zip\", size : \"6.7 MB\", thumbnail : \"ri-file-text-fill\" },\r\n    ]);\r\n\r\n    /* intilize t variable for multi language implementation */\r\n    const { t } = useTranslation();\r\n\r\n    const toggleCollapse1 = () => {\r\n        setIsOpen1(!isOpen1);\r\n        setIsOpen2(false);\r\n    };\r\n\r\n    const toggleCollapse2 = () => {\r\n        setIsOpen2(!isOpen2);\r\n        setIsOpen1(false);\r\n    };\r\n\r\n    const toggle = () => setDropdownOpen(!dropdownOpen);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                            <div className=\"px-4 pt-4\">\r\n                                <div className=\"user-chat-nav float-right\">\r\n                                    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                                        <DropdownToggle tag=\"a\" className=\"font-size-18 text-muted dropdown-toggle\">\r\n                                            <i className=\"ri-more-2-fill\"></i>\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu right>\r\n                                            <DropdownItem>{t('Edit')}</DropdownItem>\r\n                                            <DropdownItem>{t('Action')}</DropdownItem>\r\n                                            <DropdownItem divider />\r\n                                            <DropdownItem>{t('Another action')}</DropdownItem>\r\n                                        </DropdownMenu>\r\n                                    </Dropdown>\r\n                                </div>\r\n                                <h4 className=\"mb-0\">{t('My Profile')}</h4>\r\n                            </div>\r\n\r\n                            <div className=\"text-center p-4 border-bottom\">\r\n                                <div className=\"mb-4\">\r\n                                    <img src={avatar1} className=\"rounded-circle avatar-lg img-thumbnail\" alt=\"chatvia\" />\r\n                                </div>\r\n\r\n                                <h5 className=\"font-size-16 mb-1 text-truncate\">{t('Patricia Smith')}</h5>\r\n                                <p className=\"text-muted text-truncate mb-1\"><i className=\"ri-record-circle-fill font-size-10 text-success mr-1 d-inline-block\"></i> {t('Active')}</p>\r\n                            </div>\r\n                           {/* End profile user  */}\r\n\r\n                             {/* Start user-profile-desc */}\r\n                            <div className=\"p-4 user-profile-desc\">\r\n                                <div className=\"text-muted\">\r\n                                    <p className=\"mb-4\">{t('If several languages coalesce, the grammar of the resulting language is more simple and regular than that of the individual.')}</p>\r\n                                </div>\r\n\r\n\r\n                                <div id=\"profile-user-accordion-1\" className=\"custom-accordion\">\r\n                                    <Card className=\"shadow-none border mb-2\">\r\n                                        {/* import collaps */}\r\n                                        <CustomCollapse\r\n                                            title = \"About\"\r\n                                            iconClass = \"ri-user-2-line\"\r\n                                            isOpen={isOpen1}\r\n                                            toggleCollapse={toggleCollapse1}\r\n                                        >\r\n                                                <div>\r\n                                                    <p className=\"text-muted mb-1\">{t('Name')}</p>\r\n                                                    <h5 className=\"font-size-14\">{t('Patricia Smith')}</h5>\r\n                                                </div>\r\n\r\n                                                <div className=\"mt-4\">\r\n                                                    <p className=\"text-muted mb-1\">{t('Email')}</p>\r\n                                                    <h5 className=\"font-size-14\">{t('adc@123.com')}</h5>\r\n                                                </div>\r\n\r\n                                                <div className=\"mt-4\">\r\n                                                    <p className=\"text-muted mb-1\">{t('Time')}</p>\r\n                                                    <h5 className=\"font-size-14\">{t('11:40 AM')}</h5>\r\n                                                </div>\r\n\r\n                                                <div className=\"mt-4\">\r\n                                                    <p className=\"text-muted mb-1\">{t('Location')}</p>\r\n                                                    <h5 className=\"font-size-14 mb-0\">{t('California, USA')}</h5>\r\n                                                </div>\r\n                                        </CustomCollapse>\r\n                                    </Card>\r\n                                   {/* End About card  */}\r\n\r\n                                    <Card className=\"mb-1 shadow-none border\">\r\n                                        {/* import collaps */}\r\n                                        <CustomCollapse\r\n                                            title = \"Attached Files\"\r\n                                            iconClass = \"ri-attachment-line\"\r\n                                            isOpen={isOpen2}\r\n                                            toggleCollapse={toggleCollapse2}\r\n                                        >\r\n                                            {/* attached files */}\r\n                                            <AttachedFiles files={files} />\r\n                                        </CustomCollapse>\r\n                                    </Card>\r\n                                   {/* End Attached Files card  */}\r\n                                </div>\r\n                                {/* end profile-user-accordion  */}\r\n\r\n                            </div>\r\n                            {/* end user-profile-desc  */}\r\n                        </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//carousel\r\nimport AliceCarousel from 'react-alice-carousel'\r\nimport 'react-alice-carousel/lib/alice-carousel.css'\r\n\r\n//Import Images\r\nimport avatar2 from \"../../../assets/images/users/avatar-2.jpg\";\r\nimport avatar4 from \"../../../assets/images/users/avatar-4.jpg\";\r\nimport avatar5 from \"../../../assets/images/users/avatar-5.jpg\";\r\nimport avatar6 from \"../../../assets/images/users/avatar-6.jpg\";\r\n\r\nfunction OnlineUsers(props) {\r\n      const responsive = {\r\n        0: { items: 4 },\r\n        1024: { items: 4 },\r\n      }\r\n    return (\r\n        <React.Fragment>\r\n            {/* Start user status */}\r\n            <div className=\"px-4 pb-4\" dir=\"ltr\">\r\n                <AliceCarousel\r\n                    responsive={responsive}\r\n                    buttonsDisabled={true}\r\n                    dotsDisabled = {true}\r\n                    mouseTrackingEnabled\r\n                >\r\n                                        <div className=\"item\">\r\n                                            <Link to=\"#\" className=\"user-status-box\">\r\n                                                <div className=\"avatar-xs mx-auto d-block chat-user-img online\">\r\n                                                    <img src={avatar2} alt=\"user-img\" className=\"img-fluid rounded-circle\" />\r\n                                                    <span className=\"user-status\"></span>\r\n                                                </div>\r\n\r\n                                                <h5 className=\"font-size-13 text-truncate mt-3 mb-1\">Patrick</h5>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"item\">\r\n                                            <Link to=\"#\" className=\"user-status-box\">\r\n                                                <div className=\"avatar-xs mx-auto d-block chat-user-img online\">\r\n                                                    <img src={avatar4} alt=\"user-img\" className=\"img-fluid rounded-circle\" />\r\n                                                    <span className=\"user-status\"></span>\r\n                                                </div>\r\n\r\n                                                <h5 className=\"font-size-13 text-truncate mt-3 mb-1\">Doris</h5>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                        <div className=\"item\">\r\n                                            <Link to=\"#\" className=\"user-status-box\">\r\n                                                <div className=\"avatar-xs mx-auto d-block chat-user-img online\">\r\n                                                    <img src={avatar5} alt=\"user-img\" className=\"img-fluid rounded-circle\" />\r\n                                                    <span className=\"user-status\"></span>\r\n                                                </div>\r\n\r\n                                                <h5 className=\"font-size-13 text-truncate mt-3 mb-1\">Emily</h5>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                        <div className=\"item\">\r\n                                            <Link to=\"#\" className=\"user-status-box\">\r\n                                                <div className=\"avatar-xs mx-auto d-block chat-user-img online\">\r\n                                                    <img src={avatar6} alt=\"user-img\" className=\"img-fluid rounded-circle\" />\r\n                                                    <span className=\"user-status\"></span>\r\n                                                </div>\r\n\r\n                                                <h5 className=\"font-size-13 text-truncate mt-3 mb-1\">Steve</h5>\r\n                                            </Link>\r\n                                        </div>\r\n                                        \r\n\r\n                                        <div className=\"item\">\r\n                                            <Link to=\"#\" className=\"user-status-box\">\r\n                                                <div className=\"avatar-xs mx-auto d-block chat-user-img online\">\r\n                                                    <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                                        T\r\n                                                    </span>\r\n                                                    <span className=\"user-status\"></span>\r\n                                                </div>\r\n\r\n                                                <h5 className=\"font-size-13 text-truncate mt-3 mb-1\">Teresa</h5>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </AliceCarousel>\r\n                                {/* end user status carousel */}\r\n                            </div>\r\n                            {/* end user status  */}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default OnlineUsers;","import React, { Component } from 'react';\r\nimport { Input, InputGroupAddon, InputGroup, Media, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//simplebar\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//actions\r\nimport { setconversationNameInOpenChat, activeUser } from \"../../../redux/actions\"\r\n\r\n//components\r\nimport OnlineUsers from \"./OnlineUsers\";\r\n\r\nclass Chats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchChat : \"\",\r\n            recentChatList : this.props.recentChatList\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openUserChat = this.openUserChat.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var li = document.getElementById(\"conversation\" + this.props.active_user);\r\n        if(li){\r\n            li.classList.add(\"active\");\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n          this.setState({\r\n            recentChatList : this.props.recentChatList\r\n          });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.recentChatList !== nextProps.recentChatList) {\r\n            this.setState({\r\n                recentChatList: nextProps.recentChatList,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange(e)  {\r\n        this.setState({ searchChat : e.target.value });\r\n        var search = e.target.value;\r\n        let conversation = this.state.recentChatList;\r\n        let filteredArray = [];\r\n        \r\n        //find conversation name from array\r\n        for (let i = 0; i < conversation.length; i++) {\r\n            if(conversation[i].name.toLowerCase().includes(search) || conversation[i].name.toUpperCase().includes(search))\r\n                filteredArray.push(conversation[i]);\r\n        }\r\n\r\n        //set filtered items to state\r\n        this.setState({ recentChatList : filteredArray })\r\n\r\n        //if input value is blanck then assign whole recent chatlist to array\r\n        if(search === \"\") this.setState({ recentChatList : this.props.recentChatList })\r\n    }\r\n\r\n    openUserChat(e,chat) {\r\n\r\n        e.preventDefault();\r\n\r\n        //find index of current chat in array\r\n        var index = this.props.recentChatList.indexOf(chat);\r\n\r\n        // set activeUser \r\n        this.props.activeUser(index);\r\n\r\n        var chatList = document.getElementById(\"chat-list\");\r\n        var clickedItem = e.target;\r\n        var currentli = null;\r\n\r\n        if(chatList) {\r\n            var li = chatList.getElementsByTagName(\"li\");\r\n            //remove coversation user\r\n            for(var i=0; i<li.length; ++i){\r\n                if(li[i].classList.contains('active')){\r\n                    li[i].classList.remove('active');\r\n                }\r\n            }\r\n            //find clicked coversation user\r\n            for(var k=0; k<li.length; ++k){\r\n                if(li[k].contains(clickedItem)) {\r\n                    currentli = li[k];\r\n                    break;\r\n                } \r\n            }\r\n        }\r\n\r\n        //activation of clicked coversation user\r\n        if(currentli) {\r\n            currentli.classList.add('active');\r\n        }\r\n\r\n        var userChat = document.getElementsByClassName(\"user-chat\");\r\n        if(userChat) {\r\n            userChat[0].classList.add(\"user-chat-show\");\r\n        }\r\n\r\n        //removes unread badge if user clicks\r\n        var unread = document.getElementById(\"unRead\" + chat.id);\r\n        if(unread) {\r\n            unread.style.display=\"none\";\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                        <div>\r\n                            <div className=\"px-4 pt-4\">\r\n                                <h4 className=\"mb-4\">Chats</h4>\r\n                                <div className=\"search-box chat-search-box\">\r\n                                    <InputGroup size=\"lg\" className=\"mb-3 bg-light rounded-lg\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <Button color=\"link\" className=\"text-muted pr-1 text-decoration-none\" type=\"button\">\r\n                                                <i className=\"ri-search-line search-icon font-size-18\"></i>\r\n                                            </Button>\r\n                                        </InputGroupAddon>\r\n                                        <Input type=\"text\" value={this.state.searchChat} onChange={(e) => this.handleChange(e)} className=\"form-control bg-light\" placeholder=\"Search messages or users\" />\r\n                                    </InputGroup> \r\n                                </div>\r\n                                {/* Search Box */}\r\n                            </div> \r\n\r\n                            {/* online users */}\r\n                            <OnlineUsers />\r\n\r\n                            {/* Start chat-message-list  */}\r\n                            <div className=\"px-2\">\r\n                                <h5 className=\"mb-3 px-3 font-size-16\">Recent</h5>\r\n                                <SimpleBar style={{ maxHeight: \"100%\" }} className=\"chat-message-list\">\r\n\r\n                                    <ul className=\"list-unstyled chat-list chat-user-list\" id=\"chat-list\">\r\n                                        {\r\n                                            this.state.recentChatList.map((chat, key) =>\r\n                                                <li key={key} id={\"conversation\" + key} className={chat.unRead ? \"unread\" : chat.isTyping ?  \"typing\" :  key === this.props.active_user ? \"active\" : \"\"}>\r\n                                                    <Link to=\"#\" onClick={(e) => this.openUserChat(e, chat)}>\r\n                                                        <Media>\r\n                                                            {\r\n                                                                chat.profilePicture === \"Null\" ?\r\n                                                                    <div className={\"chat-user-img \" + chat.status +\" align-self-center mr-3\"}>\r\n                                                                        <div className=\"avatar-xs\">\r\n                                                                            <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                                                                {chat.name.charAt(0)}\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        {\r\n                                                                            chat.status &&  <span className=\"user-status\"></span>\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                :\r\n                                                                    <div className={\"chat-user-img \" + chat.status +\" align-self-center mr-3\"}>\r\n                                                                        <img src={chat.profilePicture} className=\"rounded-circle avatar-xs\" alt=\"chatvia\" />\r\n                                                                        {\r\n                                                                            chat.status &&  <span className=\"user-status\"></span>\r\n                                                                        }\r\n                                                                    </div>\r\n                                                            }\r\n                                                            \r\n                                                            <Media body className=\"overflow-hidden\">\r\n                                                                <h5 className=\"text-truncate font-size-15 mb-1\">{chat.name}</h5>\r\n                                                                <p className=\"chat-user-message text-truncate mb-0\">\r\n                                                                    {\r\n                                                                        chat.isTyping ?\r\n                                                                        <>\r\n                                                                            typing<span className=\"animate-typing\">\r\n                                                                            <span className=\"dot ml-1\"></span>\r\n                                                                            <span className=\"dot ml-1\"></span>\r\n                                                                            <span className=\"dot ml-1\"></span>\r\n                                                                        </span>\r\n                                                                        </>\r\n                                                                        :\r\n                                                                        <>\r\n                                                                            {\r\n                                                                                chat.messages && (chat.messages.length > 0 && chat.messages[(chat.messages).length - 1].isImageMessage === true) ? <i className=\"ri-image-fill align-middle mr-1\"></i> : null\r\n                                                                            }\r\n                                                                            {\r\n                                                                                chat.messages && (chat.messages.length > 0  && chat.messages[(chat.messages).length - 1].isFileMessage === true) ? <i className=\"ri-file-text-fill align-middle mr-1\"></i> : null\r\n                                                                            }\r\n                                                                            {chat.messages && chat.messages.length > 0 ?  chat.messages[(chat.messages).length - 1].message : null}\r\n                                                                       </>\r\n                                                                    }\r\n\r\n                                                    \r\n                                                                    \r\n                                                                </p>\r\n                                                            </Media>\r\n                                                            <div className=\"font-size-11\">{chat.messages && chat.messages.length > 0 ?  chat.messages[(chat.messages).length - 1].time : null}</div>\r\n                                                            {chat.unRead === 0 ? null :\r\n                                                                <div className=\"unread-message\" id={\"unRead\" + chat.id}>\r\n                                                                    <span className=\"badge badge-soft-danger badge-pill\">{chat.messages && chat.messages.length > 0 ? chat.unRead >= 20 ? chat.unRead + \"+\" : chat.unRead  : \"\"}</span>\r\n                                                                </div>\r\n                                                            } \r\n                                                        </Media>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            )\r\n                                        }\r\n                                    </ul>\r\n                                    </SimpleBar>\r\n                                    \r\n                            </div>\r\n                            {/* End chat-message-list */}\r\n                        </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { active_user } = state.Chat;\r\n    return { active_user };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setconversationNameInOpenChat, activeUser })(Chats);","import React, { Component } from 'react';\r\nimport { Input, Label } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//use sortedContacts variable as global variable to sort contacts\r\nlet sortedContacts = [\r\n    { group : \"A\",\r\n        children : [{ id : 0, name : \"Demo\"}]\r\n    }\r\n]\r\n\r\nclass SelectContact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contacts : this.props.contacts\r\n        }\r\n        this.sortContact = this.sortContact.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n          this.setState({\r\n            contacts : this.props.contacts\r\n          });\r\n        }\r\n    }\r\n\r\n    sortContact(){\r\n        let data = this.state.contacts.reduce((r, e) => {\r\n            try {\r\n                // get first letter of name of current element\r\n                let group = e.name[0];\r\n                // if there is no property in accumulator with this letter create it\r\n                if(!r[group]) r[group] = {group, children: [e]}\r\n                // if there is push current element to children array for that letter\r\n                else r[group].children.push(e);\r\n            } catch (error) {\r\n                return sortedContacts;\r\n            }\r\n            // return accumulator\r\n            return r;\r\n        }, {})\r\n          \r\n        // since data at this point is an object, to get array of values\r\n        // we use Object.values method\r\n        let result = Object.values(data);\r\n        this.setState({contacts : result});\r\n        sortedContacts = result;\r\n        return result;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.sortContact();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.sortContact();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            \r\n            <React.Fragment>\r\n                                {\r\n                                    sortedContacts.map((contact, key) => \r\n                                        <div key={key}>\r\n                                            <div className=\"p-3 font-weight-bold text-primary\">\r\n                                                {contact.group}\r\n                                            </div>\r\n\r\n                                            <ul className=\"list-unstyled contact-list\">\r\n                                                {\r\n                                                    contact.children.map((child, keyChild) =>\r\n                                                    \r\n                                                        <li key={keyChild}>\r\n                                                            <div className=\"custom-control custom-checkbox\">\r\n                                                                <Input type=\"checkbox\" className=\"custom-control-input\" onChange={(e) => this.props.handleCheck(e, child.id)} id={\"memberCheck\"+child.id} value={child.name} />\r\n                                                                <Label className=\"custom-control-label\" htmlFor={\"memberCheck\"+child.id}>{child.name}</Label>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    )\r\n                                                }\r\n                                            </ul>\r\n                                    </div>\r\n                                    )\r\n                                }\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { contacts } = state.Chat;\r\n    return { contacts };\r\n};\r\n\r\nexport default (connect(mapStateToProps, {  })(SelectContact));","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledTooltip, Form, FormGroup, Label, Input, Collapse, CardHeader, CardBody, Alert, InputGroup, InputGroupAddon, Media, Card, Badge } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withTranslation } from 'react-i18next';\r\n\r\n//simple bar\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//components\r\nimport SelectContact from \"../../../components/SelectContact\";\r\n\r\n//actions\r\nimport { createGroup } from \"../../../redux/actions\";\r\n\r\nclass Groups extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal : false,\r\n            isOpenCollapse : false,\r\n            groups : this.props.groups,\r\n            selectedContact : [],\r\n            isOpenAlert : false,\r\n            message : \"\",\r\n            groupName : \"\",\r\n            groupDesc : \"\"\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggleCollapse = this.toggleCollapse.bind(this);\r\n        this.createGroup = this.createGroup.bind(this);\r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleChangeGroupName = this.handleChangeGroupName.bind(this);\r\n        this.handleChangeGroupDesc = this.handleChangeGroupDesc.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ modal : !this.state.modal });\r\n    }\r\n\r\n    toggleCollapse() {\r\n        this.setState({ isOpenCollapse : !this.state.isOpenCollapse });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n          this.setState({\r\n            groups : this.props.groups\r\n          });\r\n        }\r\n    }\r\n\r\n    createGroup(){\r\n        if(this.state.selectedContact.length > 2) {\r\n            // gourpId : 5, name : \"#Project-aplha\", profilePicture : \"Null\", isGroup : true, unRead : 0, isNew : true, desc : \"project related Group\",\r\n            var obj = {\r\n                gourpId : this.state.groups.length+1,\r\n                name : \"#\" + this.state.groupName,\r\n                profilePicture : \"Null\",\r\n                isGroup : true,\r\n                unRead : 0,\r\n                isNew : true,\r\n                desc : this.state.groupDesc,\r\n                members : this.state.selectedContact\r\n            }\r\n            //call action for creating a group\r\n            this.props.createGroup(obj);\r\n            this.toggle();\r\n\r\n        } else if(this.state.selectedContact.length === 1) {\r\n            this.setState({message : \"Minimum 2 members required!!!\", isOpenAlert: true});\r\n        } else {\r\n            this.setState({message : \"Please Select Members!!!\", isOpenAlert: true});\r\n        }\r\n        setTimeout(\r\n            function() {\r\n                this.setState({ isOpenAlert: false });\r\n            }\r\n            .bind(this),\r\n            3000\r\n        );\r\n    }\r\n\r\n    handleCheck(e, contactId) {\r\n        var selected = this.state.selectedContact;\r\n        var obj;\r\n        if(e.target.checked) {\r\n            obj = {\r\n                id : contactId,\r\n                name : e.target.value \r\n            };\r\n            selected.push(obj);\r\n            this.setState({selectedContact : selected})\r\n        }\r\n    }\r\n\r\n    handleChangeGroupName(e) {\r\n        this.setState({groupName : e.target.value});\r\n    }\r\n\r\n    handleChangeGroupDesc(e) {\r\n        this.setState({groupDesc : e.target.value});\r\n    }\r\n    \r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n            <div>\r\n                            <div className=\"p-4\">\r\n                                <div className=\"user-chat-nav float-right\">\r\n                                    <div  id=\"create-group\">\r\n                                        {/* Button trigger modal */}\r\n                                        <Button onClick={this.toggle} type=\"button\" color=\"link\" className=\"text-decoration-none text-muted font-size-18 py-0\">\r\n                                            <i className=\"ri-group-line mr-1\"></i>\r\n                                        </Button>\r\n                                    </div>\r\n                                    <UncontrolledTooltip target=\"create-group\" placement=\"bottom\">\r\n                                        Create group\r\n                                    </UncontrolledTooltip>\r\n\r\n                                </div>\r\n                                <h4 className=\"mb-4\">{t('Groups')}</h4>\r\n\r\n                                {/* Start add group Modal */}\r\n                                <Modal isOpen={this.state.modal} centered toggle={this.toggle}>\r\n                                            <ModalHeader tag=\"h5\" className=\"modal-title font-size-16\" toggle={this.toggle}>{t('Create New Group')}</ModalHeader>\r\n                                            <ModalBody className=\"p-4\">\r\n                                                <Form>\r\n                                                    <FormGroup className=\"mb-4\">\r\n                                                        <Label htmlFor=\"addgroupname-input\">{t('Group Name')}</Label>\r\n                                                        <Input type=\"text\" className=\"form-control\" id=\"addgroupname-input\" value={this.state.groupName} onChange={(e) => this.handleChangeGroupName(e)} placeholder=\"Enter Group Name\" />\r\n                                                    </FormGroup>\r\n                                                    <FormGroup className=\"mb-4\">\r\n                                                        <Label>{t('Group Members')}</Label>\r\n                                                        <Alert isOpen={this.state.isOpenAlert} color=\"danger\">\r\n                                                            {this.state.message}\r\n                                                        </Alert>\r\n                                                        <div className=\"mb-3\">\r\n                                                            <Button color=\"light\" size=\"sm\" type=\"button\" onClick={this.toggleCollapse}>\r\n                                                                {t('Select Members')}\r\n                                                            </Button>\r\n                                                        </div>\r\n\r\n                                                        <Collapse isOpen={this.state.isOpenCollapse} id=\"groupmembercollapse\">\r\n                                                            <Card className=\"border\">\r\n                                                                <CardHeader>\r\n                                                                    <h5 className=\"font-size-15 mb-0\">{t('Contacts')}</h5>\r\n                                                                </CardHeader>\r\n                                                                <CardBody className=\"p-2\">\r\n                                                                    <SimpleBar style={{maxHeight: \"150px\"}}>\r\n                                                                        {/* contacts */}\r\n                                                                        <div id=\"addContacts\">\r\n                                                                            <SelectContact handleCheck={this.handleCheck} />\r\n                                                                        </div>\r\n                                                                    </SimpleBar>\r\n                                                                </CardBody>\r\n                                                            </Card>\r\n                                                        </Collapse>\r\n                                                    </FormGroup>\r\n                                                    <FormGroup>\r\n                                                        <Label htmlFor=\"addgroupdescription-input\">Description</Label>\r\n                                                        <textarea className=\"form-control\" id=\"addgroupdescription-input\" value={this.state.groupDesc} onChange={(e) => this.handleChangeGroupDesc(e)} rows=\"3\" placeholder=\"Enter Description\"></textarea>\r\n                                                    </FormGroup>\r\n                                                </Form>\r\n                                            </ModalBody>\r\n                                            <ModalFooter>\r\n                                                <Button type=\"button\" color=\"link\" onClick={this.toggle}>{t('Close')}</Button>\r\n                                                <Button type=\"button\" color=\"primary\" onClick={this.createGroup}>Create Group</Button>\r\n                                            </ModalFooter>\r\n                                </Modal>\r\n                                {/* End add group Modal */}\r\n\r\n                                <div className=\"search-box chat-search-box\">\r\n                                    <InputGroup size=\"lg\" className=\"bg-light rounded-lg\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <Button color=\"link\" className=\"text-decoration-none text-muted pr-1\" type=\"button\">\r\n                                                <i className=\"ri-search-line search-icon font-size-18\"></i>\r\n                                            </Button>\r\n                                        </InputGroupAddon>\r\n                                        <Input type=\"text\" className=\"form-control bg-light\" placeholder=\"Search groups...\" />\r\n                                    </InputGroup>\r\n                                </div>\r\n                                {/* end search-box */}\r\n                            </div>\r\n\r\n                            {/* Start chat-group-list */}\r\n                            <SimpleBar style={{ maxHeight: \"100%\" }} className=\"p-4 chat-message-list chat-group-list\">\r\n\r\n\r\n                                <ul className=\"list-unstyled chat-list\">\r\n                                    {\r\n                                       this.state.groups.map((group, key) =>\r\n                                            <li key={key} >\r\n                                                <Link to=\"#\">\r\n                                                    <Media className=\"align-items-center\">\r\n                                                        <div className=\"chat-user-img mr-3\">\r\n                                                            <div className=\"avatar-xs\">\r\n                                                                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                                                    {group.name.charAt(1)}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Media body className=\"overflow-hidden\">\r\n                                                            <h5 className=\"text-truncate font-size-14 mb-0\">\r\n                                                                {group.name}\r\n                                                                {\r\n                                                                    group.unRead !== 0\r\n                                                                    ?   <Badge color=\"none\" pill className=\"badge-soft-danger float-right\">\r\n                                                                        {\r\n                                                                            group.unRead >= 20 ? group.unRead + \"+\" : group.unRead\r\n                                                                        }\r\n                                                                        </Badge>\r\n                                                                    :   null\r\n                                                                }\r\n\r\n                                                                {\r\n                                                                    group.isNew && <Badge color=\"none\" pill className=\"badge-soft-danger float-right\">New</Badge>\r\n                                                                }\r\n                                                                \r\n                                                            </h5>\r\n                                                        </Media>\r\n                                                    </Media>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                </ul>\r\n                            </SimpleBar>\r\n                            {/* End chat-group-list */}\r\n                        </div>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { groups, active_user } = state.Chat;\r\n    return { groups,active_user };\r\n};\r\n\r\nexport default (connect(mapStateToProps, { createGroup })(withTranslation()(Groups)));","import React, { Component } from 'react';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Media, Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledTooltip, Form, FormGroup, Label, Input, InputGroup, InputGroupAddon, } from 'reactstrap';\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withTranslation } from 'react-i18next';\r\n\r\n//use sortedContacts variable as global variable to sort contacts\r\nlet sortedContacts = [\r\n    { group : \"A\",\r\n        children : [{name : \"Demo\"}]\r\n    }\r\n]\r\n\r\nclass Contacts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            modal : false,\r\n            contacts : this.props.contacts\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n        this.sortContact = this.sortContact.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n          this.setState({\r\n            contacts : this.props.contacts\r\n          });\r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({modal : !this.state.modal});\r\n    }\r\n\r\n    sortContact(){\r\n        let data = this.state.contacts.reduce((r, e) => {\r\n            try {\r\n                // get first letter of name of current element\r\n                let group = e.name[0];\r\n                // if there is no property in accumulator with this letter create it\r\n                if(!r[group]) r[group] = {group, children: [e]}\r\n                // if there is push current element to children array for that letter\r\n                else r[group].children.push(e);\r\n            } catch (error) {\r\n                return sortedContacts;\r\n            }\r\n            // return accumulator\r\n            return r;\r\n        }, {})\r\n          \r\n        // since data at this point is an object, to get array of values\r\n        // we use Object.values method\r\n        let result = Object.values(data);\r\n        this.setState({contacts : result});\r\n        sortedContacts = result;\r\n        return result;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.sortContact();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.sortContact();\r\n    }\r\n    \r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n            <div>\r\n                            <div className=\"p-4\">\r\n                                <div className=\"user-chat-nav float-right\">\r\n                                    <div id=\"add-contact\">\r\n                                        {/* Button trigger modal */}\r\n                                        <Button type=\"button\" color=\"link\" onClick={this.toggle} className=\"text-decoration-none text-muted font-size-18 py-0\">\r\n                                            <i className=\"ri-user-add-line\"></i>\r\n                                        </Button>\r\n                                    </div>\r\n                                    <UncontrolledTooltip target=\"add-contact\" placement=\"bottom\">\r\n                                        Add Contact\r\n                                    </UncontrolledTooltip>\r\n                                </div>\r\n                                <h4 className=\"mb-4\">Contacts</h4>\r\n\r\n                                {/* Start Add contact Modal */}\r\n                                <Modal isOpen={this.state.modal} centered toggle={this.toggle}>\r\n                                            <ModalHeader tag=\"h5\" className=\"font-size-16\" toggle={this.toggle}>\r\n                                                {t('Add Contacts')}\r\n                                            </ModalHeader>\r\n                                            <ModalBody className=\"p-4\">\r\n                                                <Form>\r\n                                                    <FormGroup className=\"mb-4\">\r\n                                                        <Label htmlFor=\"addcontactemail-input\">{t('Email')}</Label>\r\n                                                        <Input type=\"email\" className=\"form-control\" id=\"addcontactemail-input\" placeholder=\"Enter Email\" />\r\n                                                    </FormGroup>\r\n                                                    <FormGroup>\r\n                                                        <Label htmlFor=\"addcontact-invitemessage-input\">{t('Invatation Message')}</Label>\r\n                                                        <textarea className=\"form-control\" id=\"addcontact-invitemessage-input\" rows=\"3\" placeholder=\"Enter Message\"></textarea>\r\n                                                    </FormGroup>\r\n                                                </Form>\r\n                                            </ModalBody>\r\n                                            <ModalFooter>\r\n                                                <Button type=\"button\" color=\"link\" onClick={this.toggle}>Close</Button>\r\n                                                <Button type=\"button\" color=\"primary\">Invite Contact</Button>\r\n                                            </ModalFooter>\r\n                                </Modal>\r\n                                {/* End Add contact Modal */}\r\n\r\n                                <div className=\"search-box chat-search-box\">\r\n                                    <InputGroup size=\"lg\" className=\"bg-light rounded-lg\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <Button color=\"link\" className=\"text-decoration-none text-muted pr-1\" type=\"button\">\r\n                                                <i className=\"ri-search-line search-icon font-size-18\"></i>\r\n                                            </Button>\r\n                                        </InputGroupAddon>\r\n                                        <Input type=\"text\" className=\"form-control bg-light \" placeholder={t('Search users..')} />\r\n                                    </InputGroup>\r\n                                </div>\r\n                                {/* End search-box */}\r\n                            </div>\r\n                            {/* end p-4 */}\r\n\r\n                            {/* Start contact lists */}\r\n                            <SimpleBar style={{ maxHeight: \"100%\" }} id=\"chat-room\" className=\"p-4 chat-message-list chat-group-list\">\r\n\r\n                                {\r\n                                    sortedContacts.map((contact, key) => \r\n                                        <div key={key} className={key+1 === 1 ? \"\" : \"mt-3\"}>\r\n                                            <div className=\"p-3 font-weight-bold text-primary\">\r\n                                                {contact.group}\r\n                                            </div>\r\n\r\n                                            <ul className=\"list-unstyled contact-list\">\r\n                                                {\r\n                                                    contact.children.map((child, key) =>\r\n                                                        <li key={key} >\r\n                                                            <Media className=\"align-items-center\">\r\n                                                                <Media body>\r\n                                                                    <h5 className=\"font-size-14 m-0\">{child.name}</h5>\r\n                                                                </Media>\r\n                                                                <UncontrolledDropdown>\r\n                                                                    <DropdownToggle tag=\"a\" className=\"text-muted\">\r\n                                                                    <i className=\"ri-more-2-fill\"></i>\r\n                                                                    </DropdownToggle>\r\n                                                                    <DropdownMenu right>\r\n                                                                        <DropdownItem>{t('Share')} <i className=\"ri-share-line float-right text-muted\"></i></DropdownItem>\r\n                                                                        <DropdownItem>{t('Block')} <i className=\"ri-forbid-line float-right text-muted\"></i></DropdownItem>\r\n                                                                        <DropdownItem>{t('Remove')} <i className=\"ri-delete-bin-line float-right text-muted\"></i></DropdownItem>\r\n                                                                    </DropdownMenu>\r\n                                                                </UncontrolledDropdown>\r\n                                                            </Media>\r\n                                                        </li>\r\n                                                    )\r\n                                                }\r\n                                            </ul>\r\n                                    </div>\r\n                                    )\r\n                                }\r\n                                \r\n                            </SimpleBar>\r\n                            {/* end contact lists */}\r\n                        </div>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { contacts } = state.Chat;\r\n    return { contacts };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(withTranslation()(Contacts));","import React, { useState } from 'react';\r\nimport { Dropdown, DropdownMenu, DropdownItem, DropdownToggle, Card, Media, Button, UncontrolledDropdown, Input, Label } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//Import components\r\nimport CustomCollapse from \"../../../components/CustomCollapse\";\r\n\r\n//Import Images\r\nimport avatar1 from \"../../../assets/images/users/avatar-1.jpg\";\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction Settings(props) {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [isOpen1, setIsOpen1] = useState(true);\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const [isOpen3, setIsOpen3] = useState(false);\r\n    const [isOpen4, setIsOpen4] = useState(false);\r\n\r\n    /* intilize t variable for multi language implementation */\r\n    const { t } = useTranslation();\r\n\r\n    const toggleCollapse1 = () => {\r\n        setIsOpen1(!isOpen1);\r\n        setIsOpen2(false);\r\n        setIsOpen3(false);\r\n        setIsOpen4(false);\r\n    };\r\n\r\n    const toggleCollapse2 = () => {\r\n        setIsOpen2(!isOpen2);\r\n        setIsOpen1(false);\r\n        setIsOpen3(false);\r\n        setIsOpen4(false);\r\n    };\r\n\r\n    const toggleCollapse3 = () => {\r\n        setIsOpen3(!isOpen3);\r\n        setIsOpen1(false);\r\n        setIsOpen2(false);\r\n        setIsOpen4(false);\r\n    };\r\n\r\n    const toggleCollapse4 = () => {\r\n        setIsOpen4(!isOpen4);\r\n        setIsOpen1(false);\r\n        setIsOpen3(false);\r\n        setIsOpen2(false);\r\n    };\r\n\r\n    const toggle = () => setDropdownOpen(!dropdownOpen);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                            <div className=\"px-4 pt-4\">\r\n                                <h4 className=\"mb-0\">{t('Settings')}</h4>\r\n                            </div>\r\n\r\n                            <div className=\"text-center border-bottom p-4\">\r\n                                <div className=\"mb-4 profile-user\">\r\n                                    <img src={avatar1} className=\"rounded-circle avatar-lg img-thumbnail\" alt=\"chatvia\" />\r\n                                    <Button type=\"button\" color=\"light\" className=\"avatar-xs p-0 rounded-circle profile-photo-edit\">\r\n                                        <i className=\"ri-pencil-fill\"></i>\r\n                                    </Button>   \r\n                                    \r\n                                </div>\r\n\r\n                                <h5 className=\"font-size-16 mb-1 text-truncate\">{t('Patricia Smith')}</h5>\r\n                                <Dropdown isOpen={dropdownOpen} toggle={toggle} className=\"d-inline-block mb-1\">\r\n                                    <DropdownToggle tag=\"a\" className=\"text-muted pb-1 d-block\" >\r\n                                        {t('Available')} <i className=\"mdi mdi-chevron-down\"></i>\r\n                                    </DropdownToggle>\r\n\r\n                                    <DropdownMenu>\r\n                                        <DropdownItem>{t('Available')}</DropdownItem>\r\n                                        <DropdownItem>{t('Busy')}</DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </Dropdown>\r\n                            </div>\r\n                            {/* End profile user */}\r\n\r\n                            {/* Start User profile description */}\r\n                            <SimpleBar style={{ maxHeight: \"100%\" }} className=\"p-4 user-profile-desc\">\r\n\r\n                                <div id=\"profile-setting-accordion\" className=\"custom-accordion\">\r\n                                    <Card className=\"shadow-none border mb-2\">\r\n                                        <CustomCollapse\r\n                                            title = \"Personal Info\"\r\n                                            isOpen={isOpen1}\r\n                                            toggleCollapse={toggleCollapse1}\r\n                                        >\r\n\r\n                                                <div className=\"float-right\">\r\n                                                    <Button color=\"light\" size=\"sm\" type=\"button\" ><i className=\"ri-edit-fill mr-1 align-middle\"></i> {t('Edit')}</Button>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <p className=\"text-muted mb-1\">{t('Name')}</p>\r\n                                                    <h5 className=\"font-size-14\">{t('Patricia Smith')}</h5>\r\n                                                </div>\r\n\r\n                                                <div className=\"mt-4\">\r\n                                                    <p className=\"text-muted mb-1\">{t('Email')}</p>\r\n                                                    <h5 className=\"font-size-14\">{t('adc@123.com')}</h5>\r\n                                                </div>\r\n\r\n                                                <div className=\"mt-4\">\r\n                                                    <p className=\"text-muted mb-1\">{t('Time')}</p>\r\n                                                    <h5 className=\"font-size-14\">{t('11:40 AM')}</h5>\r\n                                                </div>\r\n\r\n                                                <div className=\"mt-4\">\r\n                                                    <p className=\"text-muted mb-1\">{t('Location')}</p>\r\n                                                    <h5 className=\"font-size-14 mb-0\">{t('California, USA')}</h5>\r\n                                                </div>\r\n                                        </CustomCollapse>\r\n                                    </Card>\r\n                                    {/* end profile card */}\r\n\r\n                                    <Card className=\"shadow-none border mb-2\">\r\n                                        <CustomCollapse\r\n                                            title = \"Privacy\"\r\n                                            isOpen={isOpen2}\r\n                                            toggleCollapse={toggleCollapse2}\r\n                                        >\r\n\r\n                                                <div className=\"py-3\">\r\n                                                    <Media className=\"align-items-center\">\r\n                                                        <Media body className=\"overflow-hidden\">\r\n                                                            <h5 className=\"font-size-13 mb-0 text-truncate\">{t('Profile photo')}</h5>\r\n                                                        </Media>\r\n                                                        <UncontrolledDropdown className=\"ml-2\">\r\n                                                            <DropdownToggle className=\"btn btn-light btn-sm w-sm\" tag=\"button\">\r\n                                                                {t('Everyone')} <i className=\"mdi mdi-chevron-down\"></i>\r\n                                                            </DropdownToggle>\r\n                                                            <DropdownMenu right>\r\n                                                                <DropdownItem>{t('Everyone')}</DropdownItem>\r\n                                                                <DropdownItem>{t('selected')}</DropdownItem>\r\n                                                                <DropdownItem>{t('Nobody')}</DropdownItem>\r\n                                                            </DropdownMenu>\r\n                                                        </UncontrolledDropdown>\r\n                                                    </Media>\r\n                                                </div>\r\n                                                <div className=\"py-3 border-top\">\r\n                                                    <Media className=\"align-items-center\">\r\n                                                        <Media body className=\"overflow-hidden\">\r\n                                                            <h5 className=\"font-size-13 mb-0 text-truncate\">{t('Last seen')}</h5>\r\n\r\n                                                        </Media>\r\n                                                        <div className=\"ml-2\">\r\n                                                            <div className=\"custom-control custom-switch\">\r\n                                                                <Input type=\"checkbox\" className=\"custom-control-input\" id=\"privacy-lastseenSwitch\" defaultChecked />\r\n                                                                <Label className=\"custom-control-label\" htmlFor=\"privacy-lastseenSwitch\"></Label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Media>\r\n                                                </div>\r\n\r\n                                                <div className=\"py-3 border-top\">\r\n                                                    <Media className=\"align-items-center\">\r\n                                                        <Media body className=\"overflow-hidden\">\r\n                                                            <h5 className=\"font-size-13 mb-0 text-truncate\">{t('Status')}</h5>\r\n\r\n                                                        </Media>\r\n                                                        <UncontrolledDropdown className=\"ml-2\">\r\n                                                            <DropdownToggle className=\"btn btn-light btn-sm w-sm\" tag=\"button\">\r\n                                                                {t('Everyone')} <i className=\"mdi mdi-chevron-down\"></i>\r\n                                                            </DropdownToggle>\r\n                                                            <DropdownMenu right>\r\n                                                                <DropdownItem>{t('Everyone')}</DropdownItem>\r\n                                                                <DropdownItem>{t('selected')}</DropdownItem>\r\n                                                                <DropdownItem>{t('Nobody')}</DropdownItem>\r\n                                                            </DropdownMenu>\r\n                                                        </UncontrolledDropdown>\r\n                                                    </Media>\r\n                                                </div>\r\n\r\n                                                <div className=\"py-3 border-top\">\r\n                                                    <Media className=\"align-items-center\">\r\n                                                        <Media body className=\"overflow-hidden\">\r\n                                                            <h5 className=\"font-size-13 mb-0 text-truncate\">{t('Read receipts')}</h5>\r\n\r\n                                                        </Media>\r\n                                                        <div className=\"ml-2\">\r\n                                                            <div className=\"custom-control custom-switch\">\r\n                                                                <Input type=\"checkbox\" className=\"custom-control-input\" id=\"privacy-readreceiptSwitch\" defaultChecked />\r\n                                                                <Label className=\"custom-control-label\" htmlFor=\"privacy-readreceiptSwitch\"></Label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Media>\r\n                                                </div>\r\n                        \r\n                                                <div className=\"py-3 border-top\">\r\n                                                    <Media className=\"align-items-center\">\r\n                                                        <Media body className=\"overflow-hidden\">\r\n                                                            <h5 className=\"font-size-13 mb-0 text-truncate\">{t('Groups')}</h5>\r\n\r\n                                                        </Media>\r\n                                                        <UncontrolledDropdown className=\"ml-2\">\r\n                                                            <DropdownToggle className=\"btn btn-light btn-sm w-sm\" tag=\"button\">\r\n                                                                {t('Everyone')} <i className=\"mdi mdi-chevron-down\"></i>\r\n                                                            </DropdownToggle>\r\n                                                            <DropdownMenu right>\r\n                                                                <DropdownItem>{t('Everyone')}</DropdownItem>\r\n                                                                <DropdownItem>{t('selected')}</DropdownItem>\r\n                                                                <DropdownItem>{t('Nobody')}</DropdownItem>\r\n                                                            </DropdownMenu>\r\n                                                        </UncontrolledDropdown>\r\n                                                    </Media>\r\n                                                </div>\r\n                                        </CustomCollapse>\r\n                                    </Card>\r\n                                    {/* end Privacy card */}\r\n\r\n                                    <Card className=\"shadow-none border mb-2\">\r\n                                        <CustomCollapse\r\n                                            title = \"Security\"\r\n                                            isOpen={isOpen3}\r\n                                            toggleCollapse={toggleCollapse3}\r\n                                        >\r\n\r\n                                                <div>\r\n                                                    <Media className=\"align-items-center\">\r\n                                                        <Media body className=\"overflow-hidden\">\r\n                                                            <h5 className=\"font-size-13 mb-0 text-truncate\">{t('Show security notification')}</h5>\r\n\r\n                                                        </Media>\r\n                                                        <div className=\"ml-2\">\r\n                                                            <div className=\"custom-control custom-switch\">\r\n                                                                <Input type=\"checkbox\" className=\"custom-control-input\" id=\"security-notificationswitch\" />\r\n                                                                <Label className=\"custom-control-label\" htmlFor=\"security-notificationswitch\"></Label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Media>\r\n                                                </div>\r\n                                        </CustomCollapse>\r\n                                    </Card>\r\n                                    {/* end Security card */}\r\n\r\n                                    <Card className=\"shadow-none border mb-2\">\r\n                                        <CustomCollapse\r\n                                            title = \"Help\"\r\n                                            isOpen={isOpen4}\r\n                                            toggleCollapse={toggleCollapse4}\r\n                                        >\r\n\r\n                                                <div>\r\n                                                    <div className=\"py-3\">\r\n                                                        <h5 className=\"font-size-13 mb-0\"><Link to=\"#\" className=\"text-body d-block\">{t('FAQs')}</Link></h5>\r\n                                                    </div>\r\n                                                    <div className=\"py-3 border-top\">\r\n                                                        <h5 className=\"font-size-13 mb-0\"><Link to=\"#\" className=\"text-body d-block\">{t('Contact')}</Link></h5>\r\n                                                    </div>\r\n                                                    <div className=\"py-3 border-top\">\r\n                                                        <h5 className=\"font-size-13 mb-0\"><Link to=\"#\" className=\"text-body d-block\">{t('Terms & Privacy policy')}</Link></h5>\r\n                                                    </div>\r\n                                                </div>\r\n                                        </CustomCollapse>\r\n                                    </Card>\r\n                                    {/* end Help card */}\r\n                                </div>\r\n                                {/* end profile-setting-accordion */}\r\n                            </SimpleBar>\r\n                            {/* End User profile description */}\r\n                        </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { TabContent, TabPane } from \"reactstrap\";\r\n\r\n//Import Components\r\nimport Profile from \"./Tabs/Profile\";\r\nimport Chats from \"./Tabs/Chats\";\r\nimport Groups from \"./Tabs/Groups\";\r\nimport Contacts from \"./Tabs/Contacts\";\r\nimport Settings from \"./Tabs/Settings\";\r\n\r\nfunction ChatLeftSidebar(props) {\r\n\r\n    const activeTab = props.activeTab;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"chat-leftsidebar mr-lg-1\">\r\n\r\n                <TabContent activeTab={activeTab}>\r\n                    {/* Start Profile tab-pane */}\r\n                    <TabPane tabId=\"profile\" id=\"pills-user\">\r\n                        {/* profile content  */}\r\n                        <Profile />\r\n                    </TabPane>\r\n                   {/* End Profile tab-pane  */}\r\n\r\n                    {/* Start chats tab-pane  */}\r\n                    <TabPane tabId=\"chat\" id=\"pills-chat\">\r\n                        {/* chats content */}\r\n                        <Chats recentChatList={props.recentChatList}/>\r\n                    </TabPane>\r\n                    {/* End chats tab-pane */}\r\n                    \r\n                    {/* Start groups tab-pane */}\r\n                    <TabPane tabId=\"group\" id=\"pills-groups\">\r\n                        {/* Groups content */}\r\n                        <Groups />\r\n                    </TabPane>\r\n                    {/* End groups tab-pane */}\r\n\r\n                    {/* Start contacts tab-pane */}\r\n                    <TabPane tabId=\"contacts\" id=\"pills-contacts\">\r\n                        {/* Contact content */}\r\n                        <Contacts />\r\n                    </TabPane>\r\n                    {/* End contacts tab-pane */}\r\n                    \r\n                    {/* Start settings tab-pane */}\r\n                    <TabPane tabId=\"settings\" id=\"pills-setting\">\r\n                        {/* Settings content */}\r\n                        <Settings />\r\n                    </TabPane>\r\n                    {/* End settings tab-pane */}\r\n                </TabContent>\r\n                {/* end tab content */}\r\n\r\n                </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n    return {\r\n      ...state.Layout\r\n    };\r\n};\r\n\r\nexport default connect(mapStatetoProps, null)(ChatLeftSidebar);","import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Card, Media, Badge } from \"reactstrap\";\r\n\r\n//Simple bar\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//components\r\nimport AttachedFiles from \"./AttachedFiles\";\r\nimport CustomCollapse from \"./CustomCollapse\";\r\n\r\n//actions\r\nimport { closeUserSidebar } from \"../redux/actions\";\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n//image\r\nimport avatar7 from \"../assets/images/users/avatar-7.jpg\";\r\n\r\nfunction UserProfileSidebar(props) {\r\n\r\n    const [isOpen1, setIsOpen1] = useState(true);\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const [isOpen3, setIsOpen3] = useState(false);\r\n    const [files] = useState([\r\n        { name : \"Admin-A.zip\", size : \"12.5 MB\", thumbnail : \"ri-file-text-fill\" },\r\n        { name : \"Image-1.jpg\", size : \"4.2 MB\", thumbnail : \"ri-image-fill\" },\r\n        { name : \"Image-2.jpg\", size : \"3.1 MB\", thumbnail : \"ri-image-fill\" },\r\n        { name : \"Landing-A.zip\", size : \"6.7 MB\", thumbnail : \"ri-file-text-fill\" },\r\n    ]);\r\n\r\n    /* intilize t variable for multi language implementation */\r\n    const { t } = useTranslation();\r\n\r\n    const toggleCollapse1 = () => {\r\n        setIsOpen1(!isOpen1);\r\n        setIsOpen2(false);\r\n        setIsOpen3(false);\r\n    };\r\n\r\n    const toggleCollapse2 = () => {\r\n        setIsOpen2(!isOpen2);\r\n        setIsOpen1(false);\r\n        setIsOpen3(false);\r\n    };\r\n\r\n    const toggleCollapse3 = () => {\r\n        setIsOpen3(!isOpen3);\r\n        setIsOpen1(false);\r\n        setIsOpen2(false);\r\n    };\r\n\r\n    // closes sidebar\r\n    const closeuserSidebar=()=> {\r\n        props.closeUserSidebar();\r\n    }\r\n    // style={{display: props.userSidebar  ? \"block\" : \"none\"}}\r\n    return (\r\n        <React.Fragment>\r\n           <div style={{display: (props.userSidebar === true)  ? \"block\" : \"none\"}} className=\"user-profile-sidebar\">\r\n                        <div className=\"px-3 px-lg-4 pt-3 pt-lg-4\">\r\n                            <div className=\"user-chat-nav text-right\">\r\n                                <Button color=\"none\" type=\"button\" onClick={closeuserSidebar} className=\"nav-btn\" id=\"user-profile-hide\">\r\n                                    <i className=\"ri-close-line\"></i>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"text-center p-4 border-bottom\">\r\n\r\n                            <div className=\"mb-4 d-flex justify-content-center\">\r\n                                {\r\n                                    props.activeUser.profilePicture ===\"Null\" ?\r\n                                        <div className=\"avatar-lg\">\r\n                                            <span className=\"avatar-title rounded-circle bg-soft-primary text-primary font-size-24\">\r\n                                                {props.activeUser.name.charAt(0)}\r\n                                            </span>\r\n                                        </div>\r\n                                    : <img src={props.activeUser.profilePicture} className=\"rounded-circle avatar-lg img-thumbnail\" alt=\"chatvia\" />\r\n                                }\r\n                                \r\n                            </div>\r\n\r\n                            <h5 className=\"font-size-16 mb-1 text-truncate\">{props.activeUser.name}</h5>\r\n                            <p className=\"text-muted text-truncate mb-1\">\r\n                            {(() => {\r\n                                                                                    switch (props.activeUser.status) {\r\n                                                                                        case \"online\":\r\n                                                                                            return (\r\n                                                                                                <>\r\n                                                                                                    <i className=\"ri-record-circle-fill font-size-10 text-success mr-1\"></i>\r\n                                                                                                </>\r\n                                                                                            )\r\n                                                                        \r\n                                                                                        case \"away\":\r\n                                                                                            return (\r\n                                                                                                <>\r\n                                                                                                    <i className=\"ri-record-circle-fill font-size-10 text-warning mr-1\"></i>\r\n                                                                                                </>\r\n                                                                                            )\r\n\r\n                                                                                        case \"offline\":\r\n                                                                                            return (\r\n                                                                                                <>\r\n                                                                                                    <i className=\"ri-record-circle-fill font-size-10 text-secondary mr-1\"></i>\r\n                                                                                                </>\r\n                                                                                            )\r\n\r\n                                                                                        default:\r\n                                                                                            return;\r\n                                                                                    }\r\n                                                                                })()}\r\n                                \r\n                                Active</p>\r\n                        </div>\r\n                        {/* End profile user */}\r\n\r\n                        {/* Start user-profile-desc */}\r\n                        <SimpleBar style={{ maxHeight: \"100%\" }} className=\"p-4 user-profile-desc\">\r\n                            <div className=\"text-muted\">\r\n                                <p className=\"mb-4\">\"{t('If several languages coalesce, the grammar of the resulting language is more simple and regular than that of the individual.')}\"</p>\r\n                            </div>\r\n\r\n                            <div id=\"profile-user-accordion\" className=\"custom-accordion\">\r\n                                <Card className=\"shadow-none border mb-2\">\r\n                                    {/* import collaps */}\r\n                                        <CustomCollapse\r\n                                            title = \"About\"\r\n                                            iconClass = \"ri-user-2-line\"\r\n                                            isOpen={isOpen1}\r\n                                            toggleCollapse={toggleCollapse1}\r\n                                        >\r\n\r\n                                            <div>\r\n                                                <p className=\"text-muted mb-1\">{t('Name')}</p>\r\n                                                <h5 className=\"font-size-14\">{props.activeUser.name}</h5>\r\n                                            </div>\r\n\r\n                                            <div className=\"mt-4\">\r\n                                                <p className=\"text-muted mb-1\">{t('Email')}</p>\r\n                                                <h5 className=\"font-size-14\">{props.activeUser.email}</h5>\r\n                                            </div>\r\n\r\n                                            <div className=\"mt-4\">\r\n                                                <p className=\"text-muted mb-1\">{t('Time')}</p>\r\n                                                <h5 className=\"font-size-14\">11:40 AM</h5>\r\n                                            </div>\r\n\r\n                                            <div className=\"mt-4\">\r\n                                                <p className=\"text-muted mb-1\">{t('Location')}</p>\r\n                                                <h5 className=\"font-size-14 mb-0\">California, USA</h5>\r\n                                            </div>\r\n                                        </CustomCollapse>\r\n                                </Card>\r\n                                {/* End About card */}\r\n\r\n                                <Card className=\"mb-1 shadow-none border\">\r\n                                    {/* import collaps */}\r\n                                    <CustomCollapse\r\n                                            title = \"Attached Files\"\r\n                                            iconClass = \"ri-attachment-line\"\r\n                                            isOpen={isOpen2}\r\n                                            toggleCollapse={toggleCollapse2}\r\n                                        >\r\n                                            {/* attached files */}\r\n                                            <AttachedFiles files={files} />\r\n                                        </CustomCollapse>\r\n                                </Card>\r\n\r\n                                {\r\n                                    props.activeUser.isGroup === true &&\r\n                                    <Card className=\"mb-1 shadow-none border\">\r\n                                        {/* import collaps */}\r\n                                        <CustomCollapse\r\n                                                title = \"Members\"\r\n                                                iconClass = \"ri-group-line\"\r\n                                                isOpen={isOpen3}\r\n                                                toggleCollapse={toggleCollapse3}\r\n                                            >\r\n                                                        <Card className=\"p-2 mb-2\">\r\n                                                            <Media className=\"align-items-center\">\r\n                                                                            <div className=\"chat-user-img align-self-center mr-3\">\r\n                                                                                        <div className=\"avatar-xs\">\r\n                                                                                            <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                                                                                S\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                <Media body>\r\n                                                                    <div className=\"text-left\">\r\n                                                                        <h5 className=\"font-size-14 mb-1\">{t('Sara Muller')}\r\n                                                                        <Badge color=\"danger\" className=\"badge-soft-danger float-right\">{t('Admin')}</Badge>\r\n                                                                        </h5>\r\n                                                                        {/* <p className=\"text-muted font-size-13 mb-0\">{member.status}</p> */}\r\n                                                                    </div>\r\n                                                                </Media>\r\n                                                            </Media>\r\n                                                        </Card>\r\n\r\n                                                        <Card className=\"p-2 mb-2\">\r\n                                                            <Media className=\"align-items-center\">\r\n                                                                            <div className=\"chat-user-img align-self-center mr-3\">\r\n                                                                                        <div className=\"avatar-xs\">\r\n                                                                                            <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                                                                                O\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                <Media body>\r\n                                                                    <div className=\"text-left\">\r\n                                                                        <h5 className=\"font-size-14 mb-1\">{t('Ossie Wilson')}</h5>\r\n                                                                        {/* <p className=\"text-muted font-size-13 mb-0\">{member.status}</p> */}\r\n                                                                    </div>\r\n                                                                </Media>\r\n                                                            </Media>\r\n                                                        </Card>\r\n\r\n                                                        <Card className=\"p-2 mb-2\">\r\n                                                            <Media className=\"align-items-center\">\r\n                                                                <div className=\"chat-avatar\">\r\n                                                                    \r\n                                                                    <img src={avatar7} className=\"rounded-circle chat-user-img avatar-xs mr-3\" alt=\"chatvia\" />\r\n                                                                </div>\r\n                                                                <Media body>\r\n                                                                    <div className=\"text-left\">\r\n                                                                        <h5 className=\"font-size-14 mb-1\">{t('Paul Haynes')}</h5>\r\n                                                                        {/* <p className=\"text-muted font-size-13 mb-0\">{member.status}</p> */}\r\n                                                                    </div>\r\n                                                                </Media>\r\n                                                            </Media>\r\n                                                        </Card>\r\n                                            </CustomCollapse>\r\n                                    </Card>\r\n                                }\r\n                            </div>\r\n                        </SimpleBar>\r\n                        {/* end user-profile-desc */}\r\n                        </div>\r\n                \r\n         \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { users,active_user } = state.Chat;\r\n    const { userSidebar } = state.Layout;\r\n    return { users,active_user,userSidebar };\r\n};\r\n\r\nexport default connect(mapStateToProps, { closeUserSidebar })(UserProfileSidebar);","import React, { useState } from 'react';\r\nimport { Dropdown, DropdownMenu, DropdownItem, DropdownToggle, Media, Button, Input, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { openUserSidebar,setFullUser } from \"../../../redux/actions\";\r\n\r\nfunction UserHead(props) {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [dropdownOpen1, setDropdownOpen1] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen(!dropdownOpen);\r\n    const toggle1 = () => setDropdownOpen1(!dropdownOpen1);\r\n\r\n    const openUserSidebar = (e) => {\r\n        e.preventDefault();\r\n        props.openUserSidebar();\r\n    }\r\n\r\n    function closeUserChat(e){\r\n        e.preventDefault();\r\n        var userChat = document.getElementsByClassName(\"user-chat\");\r\n        if(userChat) {\r\n            userChat[0].classList.remove(\"user-chat-show\");\r\n        }\r\n    }\r\n\r\n    function deleteMessage()\r\n    {\r\n         let allUsers = props.users;\r\n        let copyallUsers = allUsers;\r\n        copyallUsers[props.active_user].messages =  [];\r\n       \r\n        props.setFullUser(copyallUsers);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"p-3 p-lg-4 border-bottom\">\r\n                            <Row className=\"align-items-center\">\r\n                                <Col sm={4} xs={8}>\r\n                                    <Media className=\"align-items-center\">\r\n                                        <div className=\"d-block d-lg-none mr-2\">\r\n                                            <Link to=\"#\" onClick={(e) => closeUserChat(e)} className=\"user-chat-remove text-muted font-size-16 p-2\">\r\n                                            <i className=\"ri-arrow-left-s-line\"></i></Link>\r\n                                        </div>\r\n                                        {\r\n                                            props.users[props.active_user].profilePicture !== \"Null\" ?\r\n                                                <div className=\"mr-3\">\r\n                                                    <img src={props.users[props.active_user].profilePicture} className=\"rounded-circle avatar-xs\" alt=\"chatvia\" />\r\n                                                </div>\r\n                                            :   <div className=\"chat-user-img align-self-center mr-3\">\r\n                                                    <div className=\"avatar-xs\">\r\n                                                        <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                                            {props.users[props.active_user].name.charAt(0)}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                        }\r\n                                        \r\n                                        <Media body className=\"overflow-hidden\">\r\n                                            <h5 className=\"font-size-16 mb-0 text-truncate\">\r\n                                            <Link to=\"#\" onClick={(e) => openUserSidebar(e)} className=\"text-reset user-profile-show\">\r\n                                            {props.users[props.active_user].name}\r\n                                            </Link> \r\n                                                                                {(() => {\r\n                                                                                    switch (props.users[props.active_user].status) {\r\n                                                                                        case \"online\":\r\n                                                                                            return (\r\n                                                                                                <>\r\n                                                                                                    <i className=\"ri-record-circle-fill font-size-10 text-success d-inline-block ml-1\"></i>\r\n                                                                                                </>\r\n                                                                                            )\r\n                                                                        \r\n                                                                                        case \"away\":\r\n                                                                                            return (\r\n                                                                                                <>\r\n                                                                                                    <i className=\"ri-record-circle-fill font-size-10 text-warning d-inline-block ml-1\"></i>\r\n                                                                                                </>\r\n                                                                                            )\r\n\r\n                                                                                        case \"offline\":\r\n                                                                                            return (\r\n                                                                                                <>\r\n                                                                                                    <i className=\"ri-record-circle-fill font-size-10 text-secondary d-inline-block ml-1\"></i>\r\n                                                                                                </>\r\n                                                                                            )\r\n\r\n                                                                                        default:\r\n                                                                                            return;\r\n                                                                                    }\r\n                                                                                })()}\r\n                                                                        \r\n                                            </h5>\r\n                                        </Media>\r\n                                    </Media>\r\n                                </Col>\r\n                                <Col sm={8} xs={4} >\r\n                                    <ul className=\"list-inline user-chat-nav text-right mb-0\">\r\n                                        \r\n                                        <li className=\"list-inline-item\">\r\n                                            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                                                <DropdownToggle color=\"none\" className=\"btn nav-btn \" type=\"button\" >\r\n                                                    <i className=\"ri-search-line\"></i>\r\n                                                </DropdownToggle>\r\n                                                <DropdownMenu right className=\"p-0  dropdown-menu-md\">\r\n                                                    <div className=\"search-box p-2\">\r\n                                                        <Input type=\"text\" className=\"form-control bg-light border-0\" placeholder=\"Search..\" />\r\n                                                    </div>\r\n                                                </DropdownMenu>\r\n                                            </Dropdown>\r\n                                        </li>\r\n    \r\n                                        <li className=\"list-inline-item d-none d-lg-inline-block\">\r\n                                            <Button type=\"button\" color=\"none\" onClick={(e) => openUserSidebar(e)} className=\"nav-btn user-profile-show\">\r\n                                                <i className=\"ri-user-2-line\"></i>\r\n                                            </Button>\r\n                                        </li>\r\n    \r\n                                        <li className=\"list-inline-item\">\r\n                                            <Dropdown isOpen={dropdownOpen1} toggle={toggle1} >\r\n                                                <DropdownToggle className=\"btn nav-btn \" color=\"none\" type=\"button\" >\r\n                                                    <i className=\"ri-more-fill\"></i>\r\n                                                </DropdownToggle>\r\n                                                <DropdownMenu right>\r\n                                                    <DropdownItem className=\"d-block d-lg-none user-profile-show\" onClick={(e) => openUserSidebar(e)}>View profile <i className=\"ri-user-2-line float-right text-muted\"></i></DropdownItem>\r\n                                                    <DropdownItem>Archive <i className=\"ri-archive-line float-right text-muted\"></i></DropdownItem>\r\n                                                    <DropdownItem>Muted <i className=\"ri-volume-mute-line float-right text-muted\"></i></DropdownItem>\r\n                                                    <DropdownItem onClick={(e)=>deleteMessage(e)}>Delete <i className=\"ri-delete-bin-line float-right text-muted\"></i></DropdownItem>\r\n                                                </DropdownMenu>\r\n                                            </Dropdown>\r\n                                        </li>\r\n                                        \r\n                                    </ul>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { users,active_user } = state.Chat;\r\n    return { ...state.Layout,users,active_user };\r\n};\r\n\r\nexport default connect(mapStateToProps, { openUserSidebar,setFullUser })(UserHead);","import React, { useState } from 'react';\r\nimport { DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n//lightbox\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nfunction ImageList(props) {\r\n    const [isOpen, setisOpen] = useState(false);\r\n    const [currentImage, setcurrentImage] = useState(null);\r\n    const [images] = useState(props.images);\r\n\r\n    /* intilize t variable for multi language implementation */\r\n    const { t } = useTranslation();\r\n\r\n    const toggleLightbox = (currentImage) => {\r\n        setisOpen(!isOpen);\r\n        setcurrentImage(currentImage);\r\n    } \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ul className=\"list-inline message-img  mb-0\">\r\n                {/* image list */}\r\n                {\r\n                    images.map((imgMsg, key) =>\r\n                    <li key={key} className=\"list-inline-item message-img-list\">\r\n                                                            <div>\r\n                                                                <Link to=\"#\" onClick={() => toggleLightbox(imgMsg.image)} className=\"popup-img d-inline-block m-1\" title=\"Project 1\">\r\n                                                                    <img src={imgMsg.image} alt=\"chat\" className=\"rounded border\" />\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                            <div className=\"message-img-link\">\r\n                                                                <ul className=\"list-inline mb-0\">\r\n                                                                    <li className=\"list-inline-item\">\r\n                                                                        <Link to=\"#\">\r\n                                                                            <i className=\"ri-download-2-line\"></i>\r\n                                                                        </Link>\r\n                                                                    </li>\r\n                                                                    <UncontrolledDropdown tag=\"li\" className=\"list-inline-item\">\r\n                                                                    <DropdownToggle tag=\"a\">\r\n                                                                        <i className=\"ri-more-fill\"></i>\r\n                                                                    </DropdownToggle>\r\n                                                                    <DropdownMenu>\r\n                                                                        <DropdownItem>{t('Copy')} <i className=\"ri-file-copy-line float-right text-muted\"></i></DropdownItem>\r\n                                                                        <DropdownItem>{t('Save')} <i className=\"ri-save-line float-right text-muted\"></i></DropdownItem>\r\n                                                                        <DropdownItem>{t('Forward')} <i className=\"ri-chat-forward-line float-right text-muted\"></i></DropdownItem>\r\n                                                                        <DropdownItem>{t('Delete')} <i className=\"ri-delete-bin-line float-right text-muted\"></i></DropdownItem>\r\n                                                                    </DropdownMenu>\r\n                                                                    </UncontrolledDropdown>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </li>\r\n                    )\r\n                }\r\n\r\n                                                                {isOpen && (\r\n                                                                    <Lightbox\r\n                                                                        mainSrc={currentImage}\r\n                                                                        onCloseRequest={toggleLightbox}\r\n                                                                        imageTitle=\"Project 1\"\r\n                                                                    />\r\n                                                                )}\r\n                                                        \r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ImageList;","import React, { useState } from 'react';\r\nimport { Button, Input, Row, Col, UncontrolledTooltip, ButtonDropdown, DropdownToggle, DropdownMenu, Label, Form } from \"reactstrap\";\r\nimport { Picker } from 'emoji-mart'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\n\r\nfunction ChatInput(props) {\r\n    const [textMessage, settextMessage] = useState(\"\");\r\n    const [isOpen, setisOpen] = useState(false);\r\n    const [file, setfile] = useState({\r\n        name : \"\",\r\n        size : \"\"\r\n    });\r\n    const [fileImage, setfileImage] = useState(\"\")\r\n\r\n    const toggle = () => setisOpen(!isOpen);\r\n\r\n    //function for text input value change\r\n    const handleChange = e => {\r\n        settextMessage(e.target.value)\r\n    }\r\n\r\n    //function for add emojis\r\n    const addEmoji = e => {\r\n        let emoji = e.native;\r\n        settextMessage(textMessage+emoji)\r\n    };\r\n\r\n    //function for file input change\r\n    const handleFileChange = e => {\r\n        if(e.target.files.length !==0 )\r\n        setfile({\r\n            name : e.target.files[0].name,\r\n            size : e.target.files[0].size\r\n        })\r\n    }\r\n\r\n    //function for image input change\r\n    const handleImageChange = e => {\r\n        if(e.target.files.length !==0 )\r\n        setfileImage(URL.createObjectURL(e.target.files[0]))\r\n    }\r\n\r\n    //function for send data to onaddMessage function(in userChat/index.js component)\r\n    const onaddMessage = (e, textMessage) => {\r\n        e.preventDefault();\r\n        //if text value is not emptry then call onaddMessage function\r\n        if(textMessage !== \"\") {\r\n            props.onaddMessage(textMessage, \"textMessage\");\r\n            settextMessage(\"\");\r\n        }\r\n\r\n        //if file input value is not empty then call onaddMessage function\r\n        if(file.name !== \"\") {\r\n            props.onaddMessage(file, \"fileMessage\");\r\n            setfile({\r\n                name : \"\",\r\n                size : \"\"\r\n            })\r\n        }\r\n\r\n        //if image input value is not empty then call onaddMessage function\r\n        if(fileImage !== \"\") {\r\n            props.onaddMessage(fileImage, \"imageMessage\");\r\n            setfileImage(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"p-3 p-lg-4 border-top mb-0\">\r\n                            <Form onSubmit={(e) => onaddMessage(e, textMessage)} >\r\n                                <Row noGutters>\r\n                                    <Col>\r\n                                        <div>\r\n                                            <Input type=\"text\" value={textMessage} onChange={handleChange} className=\"form-control form-control-lg bg-light border-light\" placeholder=\"Enter Message...\" />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xs=\"auto\">\r\n                                        <div className=\"chat-input-links ml-md-2\">\r\n                                            <ul className=\"list-inline mb-0\">\r\n                                                <li className=\"list-inline-item\">\r\n                                                <ButtonDropdown className=\"emoji-dropdown\" direction=\"up\" isOpen={isOpen} toggle={toggle}>\r\n                                                    <DropdownToggle id=\"emoji\" color=\"link\" className=\"text-decoration-none font-size-16 btn-lg waves-effect\">\r\n                                                        <i className=\"ri-emotion-happy-line\"></i>\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu className=\"dropdown-menu-lg-right\">\r\n                                                        <Picker onSelect={addEmoji} />\r\n                                                    </DropdownMenu>\r\n                                                    </ButtonDropdown>\r\n                                                    <UncontrolledTooltip target=\"emoji\" placement=\"top\">\r\n                                                        Emoji\r\n                                                    </UncontrolledTooltip>\r\n                                                </li>\r\n                                                <li className=\"list-inline-item input-file\">\r\n                                                    <Label id=\"files\" className=\"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\">\r\n                                                        <i className=\"ri-attachment-line\"></i>\r\n                                                    <Input onChange={(e) => handleFileChange(e)} type=\"file\" name=\"fileInput\" size=\"60\" />\r\n                                                    </Label>   \r\n                                                    <UncontrolledTooltip target=\"files\" placement=\"top\">\r\n                                                        Attached File\r\n                                                    </UncontrolledTooltip>\r\n                                                </li>\r\n                                                <li className=\"list-inline-item input-file\">\r\n                                                    <Label id=\"images\" className=\"mr-1 btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\">\r\n                                                        <i className=\"ri-image-fill\"></i>\r\n                                                    <Input onChange={(e) => handleImageChange(e)} accept=\"image/*\" type=\"file\" name=\"fileInput\" size=\"60\" />\r\n                                                    </Label>   \r\n                                                    <UncontrolledTooltip target=\"images\" placement=\"top\">\r\n                                                        Images\r\n                                                    </UncontrolledTooltip>\r\n                                                </li>\r\n                                                <li className=\"list-inline-item\">\r\n                                                    <Button type=\"submit\" color=\"primary\" className=\"font-size-16 btn-lg chat-send waves-effect waves-light\">\r\n                                                        <i className=\"ri-send-plane-2-fill\"></i>\r\n                                                    </Button>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ChatInput;","import React from 'react';\r\nimport { Card, Media, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction FileList(props) {\r\n\r\n    /* intilize t variable for multi language implementation */\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card className=\"p-2 mb-2\">\r\n                      <Media className=\"align-items-center\">\r\n                           <div className=\"avatar-sm mr-3\">\r\n                                                                <div className=\"avatar-title bg-soft-primary text-primary rounded font-size-20\">\r\n                                                                    <i className=\"ri-file-text-fill\"></i>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <Media body>\r\n                                                                <div className=\"text-left\">\r\n                                                                    <h5 className=\"font-size-14 mb-1\">{props.fileName}</h5>\r\n                                                                    <p className=\"text-muted font-size-13 mb-0\">{props.fileSize}</p>\r\n                                                                </div>\r\n                                                            </Media>\r\n    \r\n                                                            <div className=\"ml-4\">\r\n                                                                <ul className=\"list-inline mb-0 font-size-20\">\r\n                                                                    <li className=\"list-inline-item\">\r\n                                                                        <Link to=\"#\" className=\"text-muted\">\r\n                                                                            <i className=\"ri-download-2-line\"></i>\r\n                                                                        </Link>\r\n                                                                    </li>\r\n                                                                    <UncontrolledDropdown tag=\"li\" className=\"list-inline-item\">\r\n                                                                        <DropdownToggle tag=\"a\" className=\"dropdown-toggle text-muted\">\r\n                                                                            <i className=\"ri-more-fill\"></i>\r\n                                                                        </DropdownToggle>\r\n                                                                        <DropdownMenu right>\r\n                                                                            <DropdownItem>{t('Share')} <i className=\"ri-share-line float-right text-muted\"></i></DropdownItem>\r\n                                                                            <DropdownItem>{t('Delete')} <i className=\"ri-delete-bin-line float-right text-muted\"></i></DropdownItem>\r\n                                                                        </DropdownMenu>\r\n                                                                    </UncontrolledDropdown>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </Media>\r\n                                                    </Card>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default FileList;","import React, { useState,useEffect, useRef } from 'react';\r\nimport { DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown, Modal, ModalHeader, ModalBody, CardBody, Button, ModalFooter } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//Import Components\r\nimport UserProfileSidebar from \"../../../components/UserProfileSidebar\";\r\nimport SelectContact from \"../../../components/SelectContact\";\r\nimport UserHead from \"./UserHead\";\r\nimport ImageList from \"./ImageList\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport FileList from \"./FileList\";\r\n\r\n//actions\r\nimport { openUserSidebar,setFullUser } from \"../../../redux/actions\";\r\n\r\n//Import Images\r\nimport avatar4 from \"../../../assets/images/users/avatar-4.jpg\";\r\nimport avatar1 from \"../../../assets/images/users/avatar-1.jpg\";\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction UserChat(props) {\r\n\r\n    const ref = useRef();\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    /* intilize t variable for multi language implementation */\r\n    const { t } = useTranslation();\r\n\r\n    //demo conversation messages\r\n    //userType must be required\r\n    const [ allUsers ] = useState(props.recentChatList);\r\n    const [ chatMessages, setchatMessages ] = useState(props.recentChatList[props.active_user].messages);\r\n\r\n    useEffect(() => {\r\n        setchatMessages(props.recentChatList[props.active_user].messages);\r\n        ref.current.recalculate();\r\n        if (ref.current.el) {\r\n            ref.current.getScrollElement().scrollTop = ref.current.getScrollElement().scrollHeight;\r\n        }\r\n    },[props.active_user, props.recentChatList]);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const addMessage = (message, type) => {\r\n        var messageObj = null;\r\n\r\n        let d = new Date();\r\n        var n = d.getSeconds();\r\n\r\n        //matches the message type is text, file or image, and create object according to it\r\n        switch (type) {\r\n            case \"textMessage\":\r\n                messageObj = {\r\n                    id : chatMessages.length+1,\r\n                    message : message,\r\n                    time : \"00:\" + n,\r\n                    userType : \"sender\",\r\n                    image : avatar4,\r\n                    isFileMessage : false,\r\n                    isImageMessage : false\r\n                }\r\n                break;\r\n\r\n            case \"fileMessage\":\r\n                messageObj = {\r\n                    id : chatMessages.length+1,\r\n                    message : 'file',\r\n                    fileMessage : message.name,\r\n                    size : message.size,\r\n                    time : \"00:\" + n,\r\n                    userType : \"sender\",\r\n                    image : avatar4,\r\n                    isFileMessage : true,\r\n                    isImageMessage : false\r\n                }\r\n                break;\r\n\r\n            case \"imageMessage\":\r\n                var imageMessage = [\r\n                    { image : message },\r\n                ]\r\n\r\n                messageObj = {\r\n                    id : chatMessages.length+1,\r\n                    message : 'image',\r\n                    imageMessage : imageMessage,\r\n                    size : message.size,\r\n                    time : \"00:\" + n,\r\n                    userType : \"sender\",\r\n                    image : avatar4,\r\n                    isImageMessage : true,\r\n                    isFileMessage : false\r\n                }\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n     \r\n        //add message object to chat        \r\n        setchatMessages([...chatMessages, messageObj]);\r\n\r\n        let copyallUsers = [...allUsers];\r\n        copyallUsers[props.active_user].messages = [...chatMessages, messageObj];\r\n        copyallUsers[props.active_user].isTyping = false;\r\n        props.setFullUser(copyallUsers);\r\n\r\n        scrolltoBottom();\r\n    }\r\n\r\n    function scrolltoBottom(){\r\n        if (ref.current.el) {\r\n            ref.current.getScrollElement().scrollTop = ref.current.getScrollElement().scrollHeight;\r\n        }\r\n    }\r\n\r\n\r\n    const deleteMessage = (id) => {\r\n        let conversation = chatMessages;\r\n\r\n        var filtered = conversation.filter(function (item) {\r\n            return item.id !== id;\r\n        });\r\n\r\n        setchatMessages(filtered);\r\n    }\r\n\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"user-chat w-100\">\r\n                \r\n                <div className=\"d-lg-flex\">\r\n\r\n                    <div className={ props.userSidebar ? \"w-70\" : \"w-100\" }>\r\n\r\n                        {/* render user head */}\r\n                        <UserHead /> \r\n\r\n                            <SimpleBar\r\n                                style={{ maxHeight: \"100%\" }}\r\n                                ref={ref}\r\n                                className=\"chat-conversation p-3 p-lg-4\"\r\n                                id=\"messages\">\r\n                            <ul className=\"list-unstyled mb-0\">\r\n                            \r\n                                \r\n                                {\r\n                                    chatMessages.map((chat, key) => \r\n                                        chat.isToday && chat.isToday === true ? <li key={\"dayTitle\" + key}> \r\n                                            <div className=\"chat-day-title\">\r\n                                                <span className=\"title\">Today</span>\r\n                                            </div>\r\n                                        </li> : \r\n                                        (props.recentChatList[props.active_user].isGroup === true) ? \r\n                                            <li key={key} className={chat.userType === \"sender\" ? \"right\" : \"\"}>\r\n                                                <div className=\"conversation-list\">\r\n                                                    \r\n                                                    <div className=\"chat-avatar\">\r\n                                                    {chat.userType === \"sender\" ?   <img src={avatar1} alt=\"chatvia\" /> : \r\n                                                        props.recentChatList[props.active_user].profilePicture === \"Null\" ?\r\n                                                                <div className=\"chat-user-img align-self-center mr-3\">\r\n                                                                            <div className=\"avatar-xs\">\r\n                                                                                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                                                                    {chat.userName && chat.userName.charAt(0)}                                                                                    \r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                        :  <img src={props.recentChatList[props.active_user].profilePicture} alt=\"chatvia\" />\r\n                                                    }\r\n                                                    </div>\r\n                \r\n                                                    <div className=\"user-chat-content\">\r\n                                                        <div className=\"ctext-wrap\">\r\n                                                            <div className=\"ctext-wrap-content\">\r\n                                                                {\r\n                                                                    chat.message &&\r\n                                                                        <p className=\"mb-0\">\r\n                                                                            {chat.message}\r\n                                                                        </p>\r\n                                                                }\r\n                                                                {\r\n                                                                    chat.imageMessage &&\r\n                                                                        // image list component\r\n                                                                        <ImageList images={chat.imageMessage} />\r\n                                                                }\r\n                                                                {\r\n                                                                    chat.fileMessage &&\r\n                                                                        //file input component\r\n                                                                        <FileList fileName={chat.fileMessage} fileSize={chat.size} />\r\n                                                                }\r\n                                                                {\r\n                                                                    chat.isTyping &&\r\n                                                                        <p className=\"mb-0\">\r\n                                                                            typing\r\n                                                                            <span className=\"animate-typing\">\r\n                                                                                <span className=\"dot ml-1\"></span>\r\n                                                                                <span className=\"dot ml-1\"></span>\r\n                                                                                <span className=\"dot ml-1\"></span>\r\n                                                                            </span>\r\n                                                                        </p>\r\n                                                                }\r\n                                                                {\r\n                                                                    !chat.isTyping && <p className=\"chat-time mb-0\"><i className=\"ri-time-line align-middle\"></i> <span className=\"align-middle\">{chat.time}</span></p>\r\n                                                                }\r\n                                                            </div>\r\n                                                            {\r\n                                                                !chat.isTyping &&\r\n                                                                    <UncontrolledDropdown className=\"align-self-start\">\r\n                                                                        <DropdownToggle tag=\"a\">\r\n                                                                            <i className=\"ri-more-2-fill\"></i>\r\n                                                                        </DropdownToggle>\r\n                                                                        <DropdownMenu>\r\n                                                                            <DropdownItem>{t('Copy')} <i className=\"ri-file-copy-line float-right text-muted\"></i></DropdownItem>\r\n                                                                            <DropdownItem>{t('Save')} <i className=\"ri-save-line float-right text-muted\"></i></DropdownItem>\r\n                                                                            <DropdownItem onClick={toggle}>Forward <i className=\"ri-chat-forward-line float-right text-muted\"></i></DropdownItem>\r\n                                                                            <DropdownItem onClick={() => deleteMessage(chat.id) }>Delete <i className=\"ri-delete-bin-line float-right text-muted\"></i></DropdownItem>\r\n                                                                        </DropdownMenu>\r\n                                                                    </UncontrolledDropdown>\r\n                                                            }\r\n                                                            \r\n                                                        </div>\r\n                                                        {\r\n                                                            <div className=\"conversation-name\">{chat.userType === \"sender\" ? \"Patricia Smith\" : chat.userName}</div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        :\r\n                                            <li key={key} className={chat.userType === \"sender\" ? \"right\" : \"\"}>\r\n                                                <div className=\"conversation-list\">\r\n                                                        {\r\n                                                            //logic for display user name and profile only once, if current and last messaged sent by same receiver\r\n                                                            chatMessages[key+1] ? chatMessages[key].userType === chatMessages[key+1].userType ? \r\n                                                            \r\n                                                            <div className=\"chat-avatar\">\r\n                                                                <div className=\"blank-div\"></div>\r\n                                                            </div>\r\n                                                            :  \r\n                                                                <div className=\"chat-avatar\">\r\n                                                                    {chat.userType === \"sender\" ?   <img src={avatar1} alt=\"chatvia\" /> : \r\n                                                                        props.recentChatList[props.active_user].profilePicture === \"Null\" ?\r\n                                                                                <div className=\"chat-user-img align-self-center mr-3\">\r\n                                                                                            <div className=\"avatar-xs\">\r\n                                                                                                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                                                                                    {props.recentChatList[props.active_user].name.charAt(0)}\r\n                                                                                                </span>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                        :  <img src={props.recentChatList[props.active_user].profilePicture} alt=\"chatvia\" />\r\n                                                                    }\r\n                                                                </div>\r\n                                                            :   <div className=\"chat-avatar\">\r\n                                                                    {chat.userType === \"sender\" ?   <img src={avatar1} alt=\"chatvia\" /> : \r\n                                                                        props.recentChatList[props.active_user].profilePicture === \"Null\" ?\r\n                                                                                <div className=\"chat-user-img align-self-center mr-3\">\r\n                                                                                            <div className=\"avatar-xs\">\r\n                                                                                                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                                                                                    {props.recentChatList[props.active_user].name.charAt(0)}\r\n                                                                                                </span>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                        :  <img src={props.recentChatList[props.active_user].profilePicture} alt=\"chatvia\" />\r\n                                                                    }\r\n                                                                </div>\r\n                                                        }\r\n                                                    \r\n                \r\n                                                    <div className=\"user-chat-content\">\r\n                                                        <div className=\"ctext-wrap\">\r\n                                                            <div className=\"ctext-wrap-content\">\r\n                                                                {\r\n                                                                    chat.message &&\r\n                                                                        <p className=\"mb-0\">\r\n                                                                            {chat.message}\r\n                                                                        </p>\r\n                                                                }\r\n                                                                {\r\n                                                                    chat.imageMessage &&\r\n                                                                        // image list component\r\n                                                                        <ImageList images={chat.imageMessage} />\r\n                                                                }\r\n                                                                {\r\n                                                                    chat.fileMessage &&\r\n                                                                        //file input component\r\n                                                                        <FileList fileName={chat.fileMessage} fileSize={chat.size} />\r\n                                                                }\r\n                                                                {\r\n                                                                    chat.isTyping &&\r\n                                                                        <p className=\"mb-0\">\r\n                                                                            typing\r\n                                                                            <span className=\"animate-typing\">\r\n                                                                                <span className=\"dot ml-1\"></span>\r\n                                                                                <span className=\"dot ml-1\"></span>\r\n                                                                                <span className=\"dot ml-1\"></span>\r\n                                                                            </span>\r\n                                                                        </p>\r\n                                                                }\r\n                                                                {\r\n                                                                    !chat.isTyping && <p className=\"chat-time mb-0\"><i className=\"ri-time-line align-middle\"></i> <span className=\"align-middle\">{chat.time}</span></p>\r\n                                                                }\r\n                                                            </div>\r\n                                                            {\r\n                                                                !chat.isTyping &&\r\n                                                                    <UncontrolledDropdown className=\"align-self-start\">\r\n                                                                        <DropdownToggle tag=\"a\">\r\n                                                                            <i className=\"ri-more-2-fill\"></i>\r\n                                                                        </DropdownToggle>\r\n                                                                        <DropdownMenu>\r\n                                                                            <DropdownItem>{t('Copy')} <i className=\"ri-file-copy-line float-right text-muted\"></i></DropdownItem>\r\n                                                                            <DropdownItem>{t('Save')} <i className=\"ri-save-line float-right text-muted\"></i></DropdownItem>\r\n                                                                            <DropdownItem onClick={toggle}>Forward <i className=\"ri-chat-forward-line float-right text-muted\"></i></DropdownItem>\r\n                                                                            <DropdownItem onClick={() => deleteMessage(chat.id) }>Delete <i className=\"ri-delete-bin-line float-right text-muted\"></i></DropdownItem>\r\n                                                                        </DropdownMenu>\r\n                                                                    </UncontrolledDropdown>\r\n                                                            }\r\n                                                            \r\n                                                        </div>\r\n                                                        {\r\n                                                            chatMessages[key+1] ? chatMessages[key].userType === chatMessages[key+1].userType ? null :  <div className=\"conversation-name\">{chat.userType === \"sender\" ? \"Patricia Smith\" : props.recentChatList[props.active_user].name}</div> : <div className=\"conversation-name\">{chat.userType === \"sender\" ? \"Admin\" : props.recentChatList[props.active_user].name}</div>\r\n                                                        }\r\n                                                        {/* {\r\n                                                            <div className=\"conversation-name\">{chat.userType === \"sender\" ? \"Admin\" : props.recentChatList[props.active_user].name}</div>\r\n                                                        } */}\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                    )\r\n                                }\r\n                                 </ul>\r\n                                </SimpleBar>\r\n\r\n                        <Modal backdrop=\"static\" isOpen={modal} centered toggle={toggle}>\r\n                            <ModalHeader toggle={toggle}>Forward to...</ModalHeader>\r\n                            <ModalBody>\r\n                                <CardBody className=\"p-2\">\r\n                                    <SimpleBar style={{maxHeight: \"200px\"}}>\r\n                                        <SelectContact handleCheck={() => {}} />\r\n                                    </SimpleBar>\r\n                                    <ModalFooter className=\"border-0\">\r\n                                        <Button color=\"primary\">Forward</Button>\r\n                                    </ModalFooter>\r\n                                </CardBody>\r\n                            </ModalBody>\r\n                        </Modal>\r\n    \r\n                        <ChatInput onaddMessage={addMessage} />\r\n                    </div>\r\n\r\n                    <UserProfileSidebar activeUser={props.recentChatList[props.active_user]} />\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { active_user } = state.Chat;\r\n    const { userSidebar } = state.Layout;\r\n    return { active_user,userSidebar };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, { openUserSidebar,setFullUser })(UserChat));\r\n\r\n","import React, { Component } from 'react';\r\n\r\n//Import Components\r\nimport ChatLeftSidebar from \"./ChatLeftSidebar\";\r\nimport UserChat from \"./UserChat/\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { }\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                {/* chat left sidebar */}\r\n                <ChatLeftSidebar recentChatList={this.props.users} />\r\n\r\n                {/* user chat */}\r\n                <UserChat recentChatList={this.props.users} />\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { users } = state.Chat;\r\n    return { users };\r\n};\r\n\r\nexport default connect(mapStateToProps, {  })(Index);"],"sourceRoot":""}