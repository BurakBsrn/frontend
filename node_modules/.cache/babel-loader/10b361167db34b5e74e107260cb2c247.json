{"ast":null,"code":"import _classCallCheck from\"/home/burak/projects/chat/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/burak/projects/chat/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/burak/projects/chat/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/burak/projects/chat/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/burak/projects/chat/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Button,Modal,ModalHeader,ModalBody,ModalFooter,UncontrolledTooltip,Form,FormGroup,Label,Input,Collapse,CardHeader,CardBody,Alert,InputGroup,InputGroupAddon,Media,Card,Badge}from'reactstrap';import{Link}from\"react-router-dom\";import{connect}from\"react-redux\";import{withTranslation}from'react-i18next';//simple bar\nimport SimpleBar from\"simplebar-react\";//components\nimport SelectContact from\"../../../components/SelectContact\";//actions\nimport{createGroup}from\"../../../redux/actions\";var Groups=/*#__PURE__*/function(_Component){_inherits(Groups,_Component);var _super=_createSuper(Groups);function Groups(props){var _this;_classCallCheck(this,Groups);_this=_super.call(this,props);_this.state={modal:false,isOpenCollapse:false,groups:_this.props.groups,selectedContact:[],isOpenAlert:false,message:\"\",groupName:\"\",groupDesc:\"\"};_this.toggle=_this.toggle.bind(_assertThisInitialized(_this));_this.toggleCollapse=_this.toggleCollapse.bind(_assertThisInitialized(_this));_this.createGroup=_this.createGroup.bind(_assertThisInitialized(_this));_this.handleCheck=_this.handleCheck.bind(_assertThisInitialized(_this));_this.handleChangeGroupName=_this.handleChangeGroupName.bind(_assertThisInitialized(_this));_this.handleChangeGroupDesc=_this.handleChangeGroupDesc.bind(_assertThisInitialized(_this));return _this;}_createClass(Groups,[{key:\"toggle\",value:function toggle(){this.setState({modal:!this.state.modal});}},{key:\"toggleCollapse\",value:function toggleCollapse(){this.setState({isOpenCollapse:!this.state.isOpenCollapse});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps!==this.props){this.setState({groups:this.props.groups});}}},{key:\"createGroup\",value:function createGroup(){if(this.state.selectedContact.length>2){// gourpId : 5, name : \"#Project-aplha\", profilePicture : \"Null\", isGroup : true, unRead : 0, isNew : true, desc : \"project related Group\",\nvar obj={gourpId:this.state.groups.length+1,name:\"#\"+this.state.groupName,profilePicture:\"Null\",isGroup:true,unRead:0,isNew:true,desc:this.state.groupDesc,members:this.state.selectedContact};//call action for creating a group\nthis.props.createGroup(obj);this.toggle();}else if(this.state.selectedContact.length===1){this.setState({message:\"Minimum 2 members required!!!\",isOpenAlert:true});}else{this.setState({message:\"Please Select Members!!!\",isOpenAlert:true});}setTimeout(function(){this.setState({isOpenAlert:false});}.bind(this),3000);}},{key:\"handleCheck\",value:function handleCheck(e,contactId){var selected=this.state.selectedContact;var obj;if(e.target.checked){obj={id:contactId,name:e.target.value};selected.push(obj);this.setState({selectedContact:selected});}}},{key:\"handleChangeGroupName\",value:function handleChangeGroupName(e){this.setState({groupName:e.target.value});}},{key:\"handleChangeGroupDesc\",value:function handleChangeGroupDesc(e){this.setState({groupDesc:e.target.value});}},{key:\"render\",value:function render(){var _this2=this;var t=this.props.t;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"p-4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"user-chat-nav float-right\"},/*#__PURE__*/React.createElement(\"div\",{id:\"create-group\"},/*#__PURE__*/React.createElement(Button,{onClick:this.toggle,type:\"button\",color:\"link\",className:\"text-decoration-none text-muted font-size-18 py-0\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-group-line mr-1\"}))),/*#__PURE__*/React.createElement(UncontrolledTooltip,{target:\"create-group\",placement:\"bottom\"},\"Create group\")),/*#__PURE__*/React.createElement(\"h4\",{className:\"mb-4\"},t('Groups')),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.modal,centered:true,toggle:this.toggle},/*#__PURE__*/React.createElement(ModalHeader,{tag:\"h5\",className:\"modal-title font-size-16\",toggle:this.toggle},t('Create New Group')),/*#__PURE__*/React.createElement(ModalBody,{className:\"p-4\"},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"addgroupname-input\"},t('Group Name')),/*#__PURE__*/React.createElement(Input,{type:\"text\",className:\"form-control\",id:\"addgroupname-input\",value:this.state.groupName,onChange:function onChange(e){return _this2.handleChangeGroupName(e);},placeholder:\"Enter Group Name\"})),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Label,null,t('Group Members')),/*#__PURE__*/React.createElement(Alert,{isOpen:this.state.isOpenAlert,color:\"danger\"},this.state.message),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(Button,{color:\"light\",size:\"sm\",type:\"button\",onClick:this.toggleCollapse},t('Select Members'))),/*#__PURE__*/React.createElement(Collapse,{isOpen:this.state.isOpenCollapse,id:\"groupmembercollapse\"},/*#__PURE__*/React.createElement(Card,{className:\"border\"},/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(\"h5\",{className:\"font-size-15 mb-0\"},t('Contacts'))),/*#__PURE__*/React.createElement(CardBody,{className:\"p-2\"},/*#__PURE__*/React.createElement(SimpleBar,{style:{maxHeight:\"150px\"}},/*#__PURE__*/React.createElement(\"div\",{id:\"addContacts\"},/*#__PURE__*/React.createElement(SelectContact,{handleCheck:this.handleCheck}))))))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{htmlFor:\"addgroupdescription-input\"},\"Description\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"form-control\",id:\"addgroupdescription-input\",value:this.state.groupDesc,onChange:function onChange(e){return _this2.handleChangeGroupDesc(e);},rows:\"3\",placeholder:\"Enter Description\"})))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"link\",onClick:this.toggle},t('Close')),/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"primary\",onClick:this.createGroup},\"Create Group\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"search-box chat-search-box\"},/*#__PURE__*/React.createElement(InputGroup,{size:\"lg\",className:\"bg-light rounded-lg\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(Button,{color:\"link\",className:\"text-decoration-none text-muted pr-1\",type:\"button\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-search-line search-icon font-size-18\"}))),/*#__PURE__*/React.createElement(Input,{type:\"text\",className:\"form-control bg-light\",placeholder:\"Search groups...\"})))),/*#__PURE__*/React.createElement(SimpleBar,{style:{maxHeight:\"100%\"},className:\"p-4 chat-message-list chat-group-list\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-unstyled chat-list\"},this.state.groups.map(function(group,key){return/*#__PURE__*/React.createElement(\"li\",{key:key},/*#__PURE__*/React.createElement(Link,{to:\"#\"},/*#__PURE__*/React.createElement(Media,{className:\"align-items-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat-user-img mr-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"avatar-xs\"},/*#__PURE__*/React.createElement(\"span\",{className:\"avatar-title rounded-circle bg-soft-primary text-primary\"},group.name.charAt(1)))),/*#__PURE__*/React.createElement(Media,{body:true,className:\"overflow-hidden\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"text-truncate font-size-14 mb-0\"},group.name,group.unRead!==0?/*#__PURE__*/React.createElement(Badge,{color:\"none\",pill:true,className:\"badge-soft-danger float-right\"},group.unRead>=20?group.unRead+\"+\":group.unRead):null,group.isNew&&/*#__PURE__*/React.createElement(Badge,{color:\"none\",pill:true,className:\"badge-soft-danger float-right\"},\"New\"))))));})))));}}]);return Groups;}(Component);var mapStateToProps=function mapStateToProps(state){var _state$Chat=state.Chat,groups=_state$Chat.groups,active_user=_state$Chat.active_user;return{groups:groups,active_user:active_user};};export default connect(mapStateToProps,{createGroup:createGroup})(withTranslation()(Groups));","map":{"version":3,"sources":["/home/burak/projects/chat/frontend/src/pages/dashboard/Tabs/Groups.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","UncontrolledTooltip","Form","FormGroup","Label","Input","Collapse","CardHeader","CardBody","Alert","InputGroup","InputGroupAddon","Media","Card","Badge","Link","connect","withTranslation","SimpleBar","SelectContact","createGroup","Groups","props","state","modal","isOpenCollapse","groups","selectedContact","isOpenAlert","message","groupName","groupDesc","toggle","bind","toggleCollapse","handleCheck","handleChangeGroupName","handleChangeGroupDesc","setState","prevProps","length","obj","gourpId","name","profilePicture","isGroup","unRead","isNew","desc","members","setTimeout","e","contactId","selected","target","checked","id","value","push","t","maxHeight","map","group","key","charAt","mapStateToProps","Chat","active_user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledTooltip, Form, FormGroup, Label, Input, Collapse, CardHeader, CardBody, Alert, InputGroup, InputGroupAddon, Media, Card, Badge } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withTranslation } from 'react-i18next';\r\n\r\n//simple bar\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\n//components\r\nimport SelectContact from \"../../../components/SelectContact\";\r\n\r\n//actions\r\nimport { createGroup } from \"../../../redux/actions\";\r\n\r\nclass Groups extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal : false,\r\n            isOpenCollapse : false,\r\n            groups : this.props.groups,\r\n            selectedContact : [],\r\n            isOpenAlert : false,\r\n            message : \"\",\r\n            groupName : \"\",\r\n            groupDesc : \"\"\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggleCollapse = this.toggleCollapse.bind(this);\r\n        this.createGroup = this.createGroup.bind(this);\r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleChangeGroupName = this.handleChangeGroupName.bind(this);\r\n        this.handleChangeGroupDesc = this.handleChangeGroupDesc.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ modal : !this.state.modal });\r\n    }\r\n\r\n    toggleCollapse() {\r\n        this.setState({ isOpenCollapse : !this.state.isOpenCollapse });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n          this.setState({\r\n            groups : this.props.groups\r\n          });\r\n        }\r\n    }\r\n\r\n    createGroup(){\r\n        if(this.state.selectedContact.length > 2) {\r\n            // gourpId : 5, name : \"#Project-aplha\", profilePicture : \"Null\", isGroup : true, unRead : 0, isNew : true, desc : \"project related Group\",\r\n            var obj = {\r\n                gourpId : this.state.groups.length+1,\r\n                name : \"#\" + this.state.groupName,\r\n                profilePicture : \"Null\",\r\n                isGroup : true,\r\n                unRead : 0,\r\n                isNew : true,\r\n                desc : this.state.groupDesc,\r\n                members : this.state.selectedContact\r\n            }\r\n            //call action for creating a group\r\n            this.props.createGroup(obj);\r\n            this.toggle();\r\n\r\n        } else if(this.state.selectedContact.length === 1) {\r\n            this.setState({message : \"Minimum 2 members required!!!\", isOpenAlert: true});\r\n        } else {\r\n            this.setState({message : \"Please Select Members!!!\", isOpenAlert: true});\r\n        }\r\n        setTimeout(\r\n            function() {\r\n                this.setState({ isOpenAlert: false });\r\n            }\r\n            .bind(this),\r\n            3000\r\n        );\r\n    }\r\n\r\n    handleCheck(e, contactId) {\r\n        var selected = this.state.selectedContact;\r\n        var obj;\r\n        if(e.target.checked) {\r\n            obj = {\r\n                id : contactId,\r\n                name : e.target.value \r\n            };\r\n            selected.push(obj);\r\n            this.setState({selectedContact : selected})\r\n        }\r\n    }\r\n\r\n    handleChangeGroupName(e) {\r\n        this.setState({groupName : e.target.value});\r\n    }\r\n\r\n    handleChangeGroupDesc(e) {\r\n        this.setState({groupDesc : e.target.value});\r\n    }\r\n    \r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n            <div>\r\n                            <div className=\"p-4\">\r\n                                <div className=\"user-chat-nav float-right\">\r\n                                    <div  id=\"create-group\">\r\n                                        {/* Button trigger modal */}\r\n                                        <Button onClick={this.toggle} type=\"button\" color=\"link\" className=\"text-decoration-none text-muted font-size-18 py-0\">\r\n                                            <i className=\"ri-group-line mr-1\"></i>\r\n                                        </Button>\r\n                                    </div>\r\n                                    <UncontrolledTooltip target=\"create-group\" placement=\"bottom\">\r\n                                        Create group\r\n                                    </UncontrolledTooltip>\r\n\r\n                                </div>\r\n                                <h4 className=\"mb-4\">{t('Groups')}</h4>\r\n\r\n                                {/* Start add group Modal */}\r\n                                <Modal isOpen={this.state.modal} centered toggle={this.toggle}>\r\n                                            <ModalHeader tag=\"h5\" className=\"modal-title font-size-16\" toggle={this.toggle}>{t('Create New Group')}</ModalHeader>\r\n                                            <ModalBody className=\"p-4\">\r\n                                                <Form>\r\n                                                    <FormGroup className=\"mb-4\">\r\n                                                        <Label htmlFor=\"addgroupname-input\">{t('Group Name')}</Label>\r\n                                                        <Input type=\"text\" className=\"form-control\" id=\"addgroupname-input\" value={this.state.groupName} onChange={(e) => this.handleChangeGroupName(e)} placeholder=\"Enter Group Name\" />\r\n                                                    </FormGroup>\r\n                                                    <FormGroup className=\"mb-4\">\r\n                                                        <Label>{t('Group Members')}</Label>\r\n                                                        <Alert isOpen={this.state.isOpenAlert} color=\"danger\">\r\n                                                            {this.state.message}\r\n                                                        </Alert>\r\n                                                        <div className=\"mb-3\">\r\n                                                            <Button color=\"light\" size=\"sm\" type=\"button\" onClick={this.toggleCollapse}>\r\n                                                                {t('Select Members')}\r\n                                                            </Button>\r\n                                                        </div>\r\n\r\n                                                        <Collapse isOpen={this.state.isOpenCollapse} id=\"groupmembercollapse\">\r\n                                                            <Card className=\"border\">\r\n                                                                <CardHeader>\r\n                                                                    <h5 className=\"font-size-15 mb-0\">{t('Contacts')}</h5>\r\n                                                                </CardHeader>\r\n                                                                <CardBody className=\"p-2\">\r\n                                                                    <SimpleBar style={{maxHeight: \"150px\"}}>\r\n                                                                        {/* contacts */}\r\n                                                                        <div id=\"addContacts\">\r\n                                                                            <SelectContact handleCheck={this.handleCheck} />\r\n                                                                        </div>\r\n                                                                    </SimpleBar>\r\n                                                                </CardBody>\r\n                                                            </Card>\r\n                                                        </Collapse>\r\n                                                    </FormGroup>\r\n                                                    <FormGroup>\r\n                                                        <Label htmlFor=\"addgroupdescription-input\">Description</Label>\r\n                                                        <textarea className=\"form-control\" id=\"addgroupdescription-input\" value={this.state.groupDesc} onChange={(e) => this.handleChangeGroupDesc(e)} rows=\"3\" placeholder=\"Enter Description\"></textarea>\r\n                                                    </FormGroup>\r\n                                                </Form>\r\n                                            </ModalBody>\r\n                                            <ModalFooter>\r\n                                                <Button type=\"button\" color=\"link\" onClick={this.toggle}>{t('Close')}</Button>\r\n                                                <Button type=\"button\" color=\"primary\" onClick={this.createGroup}>Create Group</Button>\r\n                                            </ModalFooter>\r\n                                </Modal>\r\n                                {/* End add group Modal */}\r\n\r\n                                <div className=\"search-box chat-search-box\">\r\n                                    <InputGroup size=\"lg\" className=\"bg-light rounded-lg\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <Button color=\"link\" className=\"text-decoration-none text-muted pr-1\" type=\"button\">\r\n                                                <i className=\"ri-search-line search-icon font-size-18\"></i>\r\n                                            </Button>\r\n                                        </InputGroupAddon>\r\n                                        <Input type=\"text\" className=\"form-control bg-light\" placeholder=\"Search groups...\" />\r\n                                    </InputGroup>\r\n                                </div>\r\n                                {/* end search-box */}\r\n                            </div>\r\n\r\n                            {/* Start chat-group-list */}\r\n                            <SimpleBar style={{ maxHeight: \"100%\" }} className=\"p-4 chat-message-list chat-group-list\">\r\n\r\n\r\n                                <ul className=\"list-unstyled chat-list\">\r\n                                    {\r\n                                       this.state.groups.map((group, key) =>\r\n                                            <li key={key} >\r\n                                                <Link to=\"#\">\r\n                                                    <Media className=\"align-items-center\">\r\n                                                        <div className=\"chat-user-img mr-3\">\r\n                                                            <div className=\"avatar-xs\">\r\n                                                                <span className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\r\n                                                                    {group.name.charAt(1)}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Media body className=\"overflow-hidden\">\r\n                                                            <h5 className=\"text-truncate font-size-14 mb-0\">\r\n                                                                {group.name}\r\n                                                                {\r\n                                                                    group.unRead !== 0\r\n                                                                    ?   <Badge color=\"none\" pill className=\"badge-soft-danger float-right\">\r\n                                                                        {\r\n                                                                            group.unRead >= 20 ? group.unRead + \"+\" : group.unRead\r\n                                                                        }\r\n                                                                        </Badge>\r\n                                                                    :   null\r\n                                                                }\r\n\r\n                                                                {\r\n                                                                    group.isNew && <Badge color=\"none\" pill className=\"badge-soft-danger float-right\">New</Badge>\r\n                                                                }\r\n                                                                \r\n                                                            </h5>\r\n                                                        </Media>\r\n                                                    </Media>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                </ul>\r\n                            </SimpleBar>\r\n                            {/* End chat-group-list */}\r\n                        </div>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { groups, active_user } = state.Chat;\r\n    return { groups,active_user };\r\n};\r\n\r\nexport default (connect(mapStateToProps, { createGroup })(withTranslation()(Groups)));"]},"metadata":{},"sourceType":"module"}