{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{withRouter,Link}from'react-router-dom';import{useFormik}from'formik';import*as Yup from'yup';import{Container,Row,Col,Card,CardBody,FormGroup,Alert,Form,Input,Button,FormFeedback,Label,InputGroup,InputGroupAddon}from'reactstrap';//Import action\nimport{registerUser,apiError}from'../../redux/actions';//i18n\nimport{useTranslation}from'react-i18next';//Import Images\nimport logodark from\"../../assets/images/logo-dark.png\";import logolight from\"../../assets/images/logo-light.png\";/**\n * Register component\n * @param {*} props \n */var Register=function Register(props){var clearError=function clearError(){props.apiError(\"\");};/* intilize t variable for multi language implementation */var _useTranslation=useTranslation(),t=_useTranslation.t;useEffect(clearError,[]);// validation\nvar formik=useFormik({initialValues:{username:'',email:'',password:''},validationSchema:Yup.object({username:Yup.string().required('Required'),email:Yup.string().email('Enter proper email').required('Required'),password:Yup.string().required('Required')}),onSubmit:function onSubmit(values){props.registerUser(values);}});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"account-pages my-5 pt-sm-5\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,{className:\"justify-content-center\"},/*#__PURE__*/React.createElement(Col,{md:8,lg:6,xl:5},/*#__PURE__*/React.createElement(\"div\",{className:\"text-center mb-4\"},/*#__PURE__*/React.createElement(Link,{to:\"/\",className:\"auth-logo mb-5 d-block\"},/*#__PURE__*/React.createElement(\"img\",{src:logodark,alt:\"\",height:\"30\",className:\"logo logo-dark\"}),/*#__PURE__*/React.createElement(\"img\",{src:logolight,alt:\"\",height:\"30\",className:\"logo logo-light\"})),/*#__PURE__*/React.createElement(\"h4\",null,t('Sign up')),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted mb-4\"},t('Get your Chatvia account now'),\".\")),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,{className:\"p-4\"},props.error&&/*#__PURE__*/React.createElement(Alert,{variant:\"danger\"},props.error),props.user&&/*#__PURE__*/React.createElement(Alert,{variant:\"success\"},\"Thank You for registering with us!\"),/*#__PURE__*/React.createElement(\"div\",{className:\"p-3\"},/*#__PURE__*/React.createElement(Form,{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,t('Email')),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-3 bg-soft-light input-group-lg rounded-lg\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text border-light text-muted\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-user-2-line\"}))),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"email\",name:\"email\",className:\"form-control bg-soft-light border-light\",placeholder:\"Enter email\",onChange:formik.handleChange,onBlur:formik.handleBlur,value:formik.values.email,invalid:formik.touched.email&&formik.errors.email?true:false}),formik.touched.email&&formik.errors.email?/*#__PURE__*/React.createElement(FormFeedback,{type:\"invalid\"},formik.errors.email):null)),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,t('Username')),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-3 bg-soft-light input-group-lg rounded-lg\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text border-light text-muted\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-user-2-line\"}))),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"username\",name:\"username\",className:\"form-control bg-soft-light border-light\",placeholder:\"Enter Username\",onChange:formik.handleChange,onBlur:formik.handleBlur,value:formik.values.username,invalid:formik.touched.username&&formik.errors.username?true:false}),formik.touched.username&&formik.errors.username?/*#__PURE__*/React.createElement(FormFeedback,{type:\"invalid\"},formik.errors.username):null)),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Label,null,t('Password')),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-3 bg-soft-light input-group-lg rounded-lg\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text border-light text-muted\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-lock-2-line\"}))),/*#__PURE__*/React.createElement(Input,{type:\"password\",id:\"password\",name:\"password\",className:\"form-control bg-soft-light border-light\",placeholder:\"Enter Password\",onChange:formik.handleChange,onBlur:formik.handleBlur,value:formik.values.password,invalid:formik.touched.password&&formik.errors.password?true:false}),formik.touched.password&&formik.errors.password?/*#__PURE__*/React.createElement(FormFeedback,{type:\"invalid\"},formik.errors.password):null)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{color:\"primary\",block:true,className:\" waves-effect waves-light\",type:\"submit\"},\"Sign up\")),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-4 text-center\"},/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted mb-0\"},t('By registering you agree to the Chatvia'),\" \",/*#__PURE__*/React.createElement(Link,{to:\"#\",className:\"text-primary\"},t('Terms of Use')))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-5 text-center\"},/*#__PURE__*/React.createElement(\"p\",null,t('Already have an account'),\" ? \",/*#__PURE__*/React.createElement(Link,{to:\"/login\",className:\"font-weight-medium text-primary\"},\" \",t('Signin'),\" \"),\" \"),/*#__PURE__*/React.createElement(\"p\",null,\"\\xA9 \",t('2020 Chatvia'),\". \",t('Crafted with'),\" \",/*#__PURE__*/React.createElement(\"i\",{className:\"mdi mdi-heart text-danger\"}),\" \",t('by Themesbrand'))))))));};var mapStateToProps=function mapStateToProps(state){var _state$Auth=state.Auth,user=_state$Auth.user,loading=_state$Auth.loading,error=_state$Auth.error;return{user:user,loading:loading,error:error};};export default withRouter(connect(mapStateToProps,{registerUser:registerUser,apiError:apiError})(Register));","map":{"version":3,"sources":["/home/burak/projects/chat/frontend/src/pages/Auth/Register.js"],"names":["React","useEffect","connect","withRouter","Link","useFormik","Yup","Container","Row","Col","Card","CardBody","FormGroup","Alert","Form","Input","Button","FormFeedback","Label","InputGroup","InputGroupAddon","registerUser","apiError","useTranslation","logodark","logolight","Register","props","clearError","t","formik","initialValues","username","email","password","validationSchema","object","string","required","onSubmit","values","error","user","handleSubmit","handleChange","handleBlur","touched","errors","mapStateToProps","state","Auth","loading"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Container, Row, Col, Card, CardBody, FormGroup, Alert, Form, Input, Button, FormFeedback, Label, InputGroup, InputGroupAddon } from 'reactstrap';\n\n//Import action\nimport { registerUser, apiError } from '../../redux/actions';\n\n//i18n\nimport { useTranslation } from 'react-i18next';\n\n//Import Images\nimport logodark from \"../../assets/images/logo-dark.png\";\nimport logolight from \"../../assets/images/logo-light.png\";\n\n/**\n * Register component\n * @param {*} props \n */\nconst Register = (props) => {\n\n    const clearError = () => {\n        props.apiError(\"\");\n    }\n\n    /* intilize t variable for multi language implementation */\n    const { t } = useTranslation();\n    \n    useEffect(clearError, []);\n\n    // validation\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            username: Yup.string().required('Required'),\n            email: Yup.string().email('Enter proper email').required('Required'),\n            password: Yup.string()\n                .required('Required')\n        }),\n        onSubmit: values => {\n            props.registerUser(values);\n        },\n    });\n   \n\n    return (\n        <React.Fragment>\n\n        <div className=\"account-pages my-5 pt-sm-5\">\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col md={8} lg={6} xl={5}>\n                        <div className=\"text-center mb-4\">\n                            <Link to=\"/\" className=\"auth-logo mb-5 d-block\">\n                                <img src={logodark} alt=\"\" height=\"30\" className=\"logo logo-dark\"/>\n                                <img src={logolight} alt=\"\" height=\"30\" className=\"logo logo-light\" />\n                            </Link>\n\n                            <h4>{t('Sign up')}</h4>\n                            <p className=\"text-muted mb-4\">{t('Get your Chatvia account now')}.</p>\n                            \n                        </div>\n\n                        <Card>\n                            <CardBody className=\"p-4\">\n                                        {\n                                            props.error && <Alert variant=\"danger\">{props.error}</Alert>\n                                        }\n                                        {\n                                            props.user && <Alert variant=\"success\">Thank You for registering with us!</Alert>\n                                        }\n                                <div className=\"p-3\">\n                                        \n                                    <Form onSubmit={formik.handleSubmit}>\n\n                                        <FormGroup>\n                                            <Label>{t('Email')}</Label>\n                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <span className=\"input-group-text border-light text-muted\">\n                                                        <i className=\"ri-user-2-line\"></i>\n                                                    </span>\n                                                </InputGroupAddon>\n                                                <Input\n                                                    type=\"text\"\n                                                    id=\"email\"\n                                                    name=\"email\"\n                                                    className=\"form-control bg-soft-light border-light\"\n                                                    placeholder=\"Enter email\"\n                                                    onChange={formik.handleChange}\n                                                    onBlur={formik.handleBlur}\n                                                    value={formik.values.email}\n                                                    invalid={formik.touched.email && formik.errors.email ? true : false}\n                                                />\n                                                {formik.touched.email && formik.errors.email ? (\n                                                    <FormFeedback type=\"invalid\">{formik.errors.email}</FormFeedback>\n                                                ) : null}\n                                            </InputGroup>\n                                        </FormGroup>\n    \n                                        <FormGroup>\n                                            <Label>{t('Username')}</Label>\n                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <span className=\"input-group-text border-light text-muted\">\n                                                        <i className=\"ri-user-2-line\"></i>\n                                                    </span>\n                                                </InputGroupAddon>\n                                                <Input\n                                                    type=\"text\"\n                                                    id=\"username\"\n                                                    name=\"username\"\n                                                    className=\"form-control bg-soft-light border-light\"\n                                                    placeholder=\"Enter Username\"\n                                                    onChange={formik.handleChange}\n                                                    onBlur={formik.handleBlur}\n                                                    value={formik.values.username}\n                                                    invalid={formik.touched.username && formik.errors.username ? true : false}\n                                                />\n                                                {formik.touched.username && formik.errors.username ? (\n                                                    <FormFeedback type=\"invalid\">{formik.errors.username}</FormFeedback>\n                                                ) : null}\n                                            </InputGroup>\n                                        </FormGroup>\n\n                                        <FormGroup className=\"mb-4\">\n                                            <Label>{t('Password')}</Label>\n                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <span className=\"input-group-text border-light text-muted\">\n                                                        <i className=\"ri-lock-2-line\"></i>\n                                                    </span>\n                                                </InputGroupAddon>\n                                                <Input\n                                                    type=\"password\"\n                                                    id=\"password\"\n                                                    name=\"password\"\n                                                    className=\"form-control bg-soft-light border-light\"\n                                                    placeholder=\"Enter Password\"\n                                                    onChange={formik.handleChange}\n                                                    onBlur={formik.handleBlur}\n                                                    value={formik.values.password}\n                                                    invalid={formik.touched.password && formik.errors.password ? true : false}\n                                                />\n                                                {formik.touched.password && formik.errors.password ? (\n                                                    <FormFeedback type=\"invalid\">{formik.errors.password}</FormFeedback>\n                                                ) : null}\n                                                \n                                            </InputGroup>\n                                        </FormGroup>\n\n\n                                        <div>\n                                            <Button color=\"primary\" block className=\" waves-effect waves-light\" type=\"submit\">Sign up</Button>\n                                        </div>\n\n                                        <div className=\"mt-4 text-center\">\n                                            <p className=\"text-muted mb-0\">{t('By registering you agree to the Chatvia')} <Link to=\"#\" className=\"text-primary\">{t('Terms of Use')}</Link></p>\n                                        </div>\n                                        \n                                    </Form>\n                                </div>\n                            </CardBody>\n                        </Card>\n\n                        <div className=\"mt-5 text-center\">\n                            <p>{t('Already have an account')} ? <Link to=\"/login\" className=\"font-weight-medium text-primary\"> {t('Signin')} </Link> </p>\n                            <p>© {t('2020 Chatvia')}. {t('Crafted with')} <i className=\"mdi mdi-heart text-danger\"></i> {t('by Themesbrand')}</p>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n        </React.Fragment>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    const { user, loading, error } = state.Auth;\n    return { user, loading, error };\n};\n\nexport default withRouter(connect(mapStateToProps, { registerUser, apiError })(Register));"]},"metadata":{},"sourceType":"module"}