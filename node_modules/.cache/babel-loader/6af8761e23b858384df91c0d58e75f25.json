{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{Link,Redirect}from'react-router-dom';//Import formik validation\nimport{useFormik}from'formik';import*as Yup from'yup';import{Container,Row,Col,Card,CardBody,FormGroup,Alert,Form,Input,Button,FormFeedback,Label,InputGroup,InputGroupAddon}from'reactstrap';//Import actions and helpers\nimport{forgetPassword,apiError}from'../../redux/actions';//i18n\nimport{useTranslation}from'react-i18next';//Import Images\nimport logodark from\"../../assets/images/logo-dark.png\";import logolight from\"../../assets/images/logo-light.png\";/**\n * Forget Password component\n * @param {*} props \n */var ForgetPassword=function ForgetPassword(props){var clearError=function clearError(){props.apiError(\"\");};/* intilize t variable for multi language implementation */var _useTranslation=useTranslation(),t=_useTranslation.t;useEffect(clearError,[]);// validation\nvar formik=useFormik({initialValues:{email:''},validationSchema:Yup.object({email:Yup.string().required('Required')}),onSubmit:function onSubmit(values){props.forgetPassword(values.email);}});if(localStorage.getItem(\"authUser\")){return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"account-pages my-5 pt-sm-5\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,{className:\"justify-content-center\"},/*#__PURE__*/React.createElement(Col,{md:8,lg:6,xl:5},/*#__PURE__*/React.createElement(\"div\",{className:\"text-center mb-4\"},/*#__PURE__*/React.createElement(Link,{to:\"/\",className:\"auth-logo mb-5 d-block\"},/*#__PURE__*/React.createElement(\"img\",{src:logodark,alt:\"\",height:\"30\",className:\"logo logo-dark\"}),/*#__PURE__*/React.createElement(\"img\",{src:logolight,alt:\"\",height:\"30\",className:\"logo logo-light\"})),/*#__PURE__*/React.createElement(\"h4\",null,t('Reset Password')),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted mb-4\"},t('Reset Password With Chatvia.'))),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,{className:\"p-4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"p-3\"},props.error&&/*#__PURE__*/React.createElement(Alert,{variant:\"danger\"},props.error),props.passwordResetStatus?/*#__PURE__*/React.createElement(Alert,{variant:\"success\",className:\"text-center mb-4\"},props.passwordResetStatus):/*#__PURE__*/React.createElement(Alert,{variant:\"success\",className:\"text-center mb-4\"},t('Enter your Email and instructions will be sent to you'),\"!\"),/*#__PURE__*/React.createElement(Form,{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Label,null,t('Email')),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-3 bg-soft-light input-group-lg rounded-lg\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text border-light text-muted\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-mail-line\"}))),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"email\",name:\"email\",className:\"form-control bg-soft-light border-light\",placeholder:\"Enter email\",onChange:formik.handleChange,onBlur:formik.handleBlur,value:formik.values.email,invalid:formik.touched.email&&formik.errors.email?true:false}),formik.touched.email&&formik.errors.email?/*#__PURE__*/React.createElement(FormFeedback,{type:\"invalid\"},formik.errors.email):null)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{color:\"primary\",block:true,className:\"waves-effect waves-light\",type:\"submit\"},t('Reset'))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-5 text-center\"},/*#__PURE__*/React.createElement(\"p\",null,t('Remember It'),\" ? \",/*#__PURE__*/React.createElement(Link,{to:\"login\",className:\"font-weight-medium text-primary\"},\" \",t('Signin'),\" \"),\" \"),/*#__PURE__*/React.createElement(\"p\",null,\"\\xA9 \",t('2020 Chatvia'),\". \",t('Crafted with'),\" \",/*#__PURE__*/React.createElement(\"i\",{className:\"mdi mdi-heart text-danger\"}),\" \",t('by Themesbrand'))))))));};var mapStateToProps=function mapStateToProps(state){var _state$Auth=state.Auth,user=_state$Auth.user,loading=_state$Auth.loading,error=_state$Auth.error,passwordResetStatus=_state$Auth.passwordResetStatus;return{user:user,loading:loading,error:error,passwordResetStatus:passwordResetStatus};};export default connect(mapStateToProps,{forgetPassword:forgetPassword,apiError:apiError})(ForgetPassword);","map":{"version":3,"sources":["/home/burak/projects/chat/frontend/src/pages/Auth/ForgetPassword.js"],"names":["React","useEffect","connect","Link","Redirect","useFormik","Yup","Container","Row","Col","Card","CardBody","FormGroup","Alert","Form","Input","Button","FormFeedback","Label","InputGroup","InputGroupAddon","forgetPassword","apiError","useTranslation","logodark","logolight","ForgetPassword","props","clearError","t","formik","initialValues","email","validationSchema","object","string","required","onSubmit","values","localStorage","getItem","error","passwordResetStatus","handleSubmit","handleChange","handleBlur","touched","errors","mapStateToProps","state","Auth","user","loading"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\n//Import formik validation\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Container, Row, Col, Card, CardBody, FormGroup, Alert, Form, Input, Button, FormFeedback, Label, InputGroup, InputGroupAddon } from 'reactstrap';\n\n//Import actions and helpers\nimport { forgetPassword, apiError } from '../../redux/actions';\n\n//i18n\nimport { useTranslation } from 'react-i18next';\n\n//Import Images\nimport logodark from \"../../assets/images/logo-dark.png\";\nimport logolight from \"../../assets/images/logo-light.png\";\n\n/**\n * Forget Password component\n * @param {*} props \n */\nconst ForgetPassword = (props) => {\n\n    const clearError = () => {\n        props.apiError(\"\");\n    }\n\n    /* intilize t variable for multi language implementation */\n    const { t } = useTranslation();\n    \n    useEffect(clearError, []);\n\n    // validation\n    const formik = useFormik({\n        initialValues: {\n            email: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                .required('Required')\n        }),\n        onSubmit: values => {\n            props.forgetPassword(values.email);\n        },\n    });\n\n    if (localStorage.getItem(\"authUser\")) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <React.Fragment>\n        <div className=\"account-pages my-5 pt-sm-5\">\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col md={8} lg={6} xl={5}>\n                        <div className=\"text-center mb-4\">\n                            <Link to=\"/\" className=\"auth-logo mb-5 d-block\">\n                                <img src={logodark} alt=\"\" height=\"30\" className=\"logo logo-dark\"/>\n                                <img src={logolight} alt=\"\" height=\"30\" className=\"logo logo-light\" />\n                            </Link>\n\n                            <h4>{t('Reset Password')}</h4>\n                            <p className=\"text-muted mb-4\">{t('Reset Password With Chatvia.')}</p>\n                            \n                        </div>\n\n                        <Card>\n                            <CardBody className=\"p-4\">\n                                <div className=\"p-3\">\n                                        {\n                                            props.error && <Alert variant=\"danger\">{props.error}</Alert>\n                                        }\n                                        {\n                                            props.passwordResetStatus ? <Alert variant=\"success\" className=\"text-center mb-4\">{props.passwordResetStatus}</Alert>\n                                            : <Alert variant=\"success\" className=\"text-center mb-4\">{t('Enter your Email and instructions will be sent to you')}!</Alert>\n                                        }\n                                    <Form onSubmit={formik.handleSubmit}>\n    \n                                        <FormGroup className=\"mb-4\">\n                                            <Label>{t('Email')}</Label>\n                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <span className=\"input-group-text border-light text-muted\">\n                                                        <i className=\"ri-mail-line\"></i>\n                                                    </span>\n                                                </InputGroupAddon>\n                                                <Input\n                                                    type=\"text\"\n                                                    id=\"email\"\n                                                    name=\"email\"\n                                                    className=\"form-control bg-soft-light border-light\"\n                                                    placeholder=\"Enter email\"\n                                                    onChange={formik.handleChange}\n                                                    onBlur={formik.handleBlur}\n                                                    value={formik.values.email}\n                                                    invalid={formik.touched.email && formik.errors.email ? true : false}\n                                                />\n                                                {formik.touched.email && formik.errors.email ? (\n                                                    <FormFeedback type=\"invalid\">{formik.errors.email}</FormFeedback>\n                                                ) : null}\n                                            </InputGroup>\n                                        </FormGroup>\n\n                                        <div>\n                                            <Button color=\"primary\" block className=\"waves-effect waves-light\" type=\"submit\">{t('Reset')}</Button>\n                                        </div>\n\n                                    </Form>\n                                </div>\n                            </CardBody>\n                        </Card>\n\n                        <div className=\"mt-5 text-center\">\n                            <p>{t('Remember It')} ? <Link to=\"login\" className=\"font-weight-medium text-primary\"> {t('Signin')} </Link> </p>\n                            <p>© {t('2020 Chatvia')}. {t('Crafted with')} <i className=\"mdi mdi-heart text-danger\"></i> {t('by Themesbrand')}</p>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n        </React.Fragment>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    const { user, loading, error, passwordResetStatus } = state.Auth;\n    return { user, loading, error, passwordResetStatus };\n};\n\nexport default connect(mapStateToProps, { forgetPassword, apiError })(ForgetPassword);"]},"metadata":{},"sourceType":"module"}