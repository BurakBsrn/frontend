{"ast":null,"code":"import _objectWithoutProperties from\"/home/burak/projects/chat/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{Suspense}from'react';import{BrowserRouter,Switch,Route,Redirect}from'react-router-dom';//import routes\nimport{authProtectedRoutes,publicRoutes}from'./routes';//import layouts\nimport NonAuthLayout from\"../layouts/NonAuth\";import AuthLayout from\"../layouts/AuthLayout/\";// handle auth and authorization\nvar AppRoute=function AppRoute(_ref){var Component=_ref.component,Layout=_ref.layout,isAuthProtected=_ref.isAuthProtected,rest=_objectWithoutProperties(_ref,[\"component\",\"layout\",\"isAuthProtected\"]);return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){if(isAuthProtected&&!localStorage.getItem(\"authUser\")){return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/login\",state:{from:props.location}}});}// authorised so return component\nreturn/*#__PURE__*/React.createElement(Layout,null,/*#__PURE__*/React.createElement(Component,props));}}));};/**\n * Main Route component\n */var Routes=function Routes(props){return/*#__PURE__*/ (// rendering the router with layout\nReact.createElement(BrowserRouter,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Suspense,{fallback:/*#__PURE__*/React.createElement(\"div\",null)},/*#__PURE__*/React.createElement(Switch,null,publicRoutes.map(function(route,idx){return/*#__PURE__*/React.createElement(AppRoute,{path:route.path,layout:NonAuthLayout,component:route.component,key:idx,isAuthProtected:false});}),authProtectedRoutes.map(function(route,idx){return/*#__PURE__*/React.createElement(AppRoute,{path:route.path,layout:AuthLayout,component:route.component,key:idx,isAuthProtected:true});}))))));};export default Routes;","map":{"version":3,"sources":["/home/burak/projects/chat/frontend/src/routes/index.js"],"names":["React","Suspense","BrowserRouter","Switch","Route","Redirect","authProtectedRoutes","publicRoutes","NonAuthLayout","AuthLayout","AppRoute","Component","component","Layout","layout","isAuthProtected","rest","props","localStorage","getItem","pathname","state","from","location","Routes","map","route","idx","path"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAASC,aAAT,CAAwBC,MAAxB,CAAgCC,KAAhC,CAAuCC,QAAvC,KAAuD,kBAAvD,CAEA;AACA,OAASC,mBAAT,CAA8BC,YAA9B,KAAkD,UAAlD,CAEA;AACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAwE,IAA1DC,CAAAA,SAA0D,MAArEC,SAAqE,CAAvCC,MAAuC,MAA/CC,MAA+C,CAA/BC,eAA+B,MAA/BA,eAA+B,CAAXC,IAAW,yEACrF,mBAAO,oBAAC,KAAD,kBAAWA,IAAX,EAAiB,MAAM,CAAE,gBAAAC,KAAK,CAAI,CAErC,GAAIF,eAAe,EAAI,CAACG,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAxB,CAA0D,CACtD,mBACI,oBAAC,QAAD,EAAU,EAAE,CAAE,CAAEC,QAAQ,CAAE,QAAZ,CAAsBC,KAAK,CAAE,CAAEC,IAAI,CAAEL,KAAK,CAACM,QAAd,CAA7B,CAAd,EADJ,CAGH,CACD;AACA,mBAAO,oBAAC,MAAD,mBAAQ,oBAAC,SAAD,CAAeN,KAAf,CAAR,CAAP,CACH,CATM,GAAP,CAUH,CAXD,CAaA;;GAGA,GAAMO,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACP,KAAD,CAAW,CAEtB,oBACI;AACA,oBAAC,aAAD,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACA,oBAAC,QAAD,EAAU,QAAQ,cAAI,+BAAtB,eACI,oBAAC,MAAD,MAEKV,YAAY,CAACkB,GAAb,CAAiB,SAACC,KAAD,CAAQC,GAAR,qBACd,oBAAC,QAAD,EAAU,IAAI,CAAED,KAAK,CAACE,IAAtB,CAA4B,MAAM,CAAEpB,aAApC,CAAmD,SAAS,CAAEkB,KAAK,CAACd,SAApE,CACI,GAAG,CAAEe,GADT,CACc,eAAe,CAAE,KAD/B,EADc,EAAjB,CAFL,CAQKrB,mBAAmB,CAACmB,GAApB,CAAwB,SAACC,KAAD,CAAQC,GAAR,qBACrB,oBAAC,QAAD,EAAU,IAAI,CAAED,KAAK,CAACE,IAAtB,CAA4B,MAAM,CAAEnB,UAApC,CAAgD,SAAS,CAAEiB,KAAK,CAACd,SAAjE,CACI,GAAG,CAAEe,GADT,CACc,eAAe,CAAE,IAD/B,EADqB,EAAxB,CARL,CADJ,CADA,CADJ,CAFJ,EAsBH,CAxBD,CA0BA,cAAeH,CAAAA,MAAf","sourcesContent":["import React, {Suspense} from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\n//import routes\nimport { authProtectedRoutes, publicRoutes } from './routes';\n\n//import layouts\nimport NonAuthLayout from \"../layouts/NonAuth\";\nimport AuthLayout from \"../layouts/AuthLayout/\";\n\n// handle auth and authorization\nconst AppRoute = ({ component: Component, layout: Layout, isAuthProtected, ...rest }) => {\n    return <Route {...rest} render={props => {\n        \n        if (isAuthProtected && !localStorage.getItem(\"authUser\")) {\n            return (\n                <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n            );\n        }\n        // authorised so return component\n        return <Layout><Component {...props} /></Layout>\n    }} />  \n}\n\n/**\n * Main Route component\n */\nconst Routes = (props) => {\n   \n    return (\n        // rendering the router with layout\n        <BrowserRouter>\n            <React.Fragment>\n            <Suspense fallback = {<div></div>} >\n                <Switch>\n                    {/* public routes */}\n                    {publicRoutes.map((route, idx) =>\n                        <AppRoute path={route.path} layout={NonAuthLayout} component={route.component}\n                            key={idx} isAuthProtected={false} />\n                    )}\n\n                    {/* private/auth protected routes */}\n                    {authProtectedRoutes.map((route, idx) =>\n                        <AppRoute path={route.path} layout={AuthLayout} component={route.component}\n                            key={idx} isAuthProtected={true} />\n                    )}\n                </Switch>\n                </Suspense>\n            </React.Fragment>\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;"]},"metadata":{},"sourceType":"module"}