{"ast":null,"code":"import _classCallCheck from\"/home/burak/projects/chat/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import axios from'axios';import config from\"./../config\";// default\naxios.defaults.baseURL=config.API_URL;// content type\naxios.defaults.headers.post['Content-Type']='application/json';// intercepting to capture errors\naxios.interceptors.response.use(function(response){return response.data?response.data:response;},function(error){// Any status codes that falls outside the range of 2xx cause this function to trigger\nvar message;switch(error.status){case 500:message='Internal Server Error';break;case 401:message='Invalid credentials';break;case 404:message=\"Sorry! the data you are looking for could not be found\";break;default:message=error.message||error;}return Promise.reject(message);});/**\n * Sets the default authorization\n * @param {*} token \n */var setAuthorization=function setAuthorization(token){axios.defaults.headers.common['Authorization']='Bearer '+token;};var APIClient=function APIClient(){_classCallCheck(this,APIClient);this.get=function(url,params){return axios.get(url,params);};this.create=function(url,data){return axios.post(url,data);};this.update=function(url,data){return axios.patch(url,data);};this.delete=function(url){return axios.put(url);};};export{APIClient,setAuthorization};","map":{"version":3,"sources":["/home/burak/projects/chat/frontend/src/helpers/apiClient.js"],"names":["axios","config","defaults","baseURL","API_URL","headers","post","interceptors","response","use","data","error","message","status","Promise","reject","setAuthorization","token","common","APIClient","get","url","params","create","update","patch","delete","put"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,aAAnB,CAGA;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAyBF,MAAM,CAACG,OAAhC,CAEA;AACAJ,KAAK,CAACE,QAAN,CAAeG,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,EAA8C,kBAA9C,CAEA;AACAN,KAAK,CAACO,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,SAAUD,QAAV,CAAoB,CAChD,MAAOA,CAAAA,QAAQ,CAACE,IAAT,CAAgBF,QAAQ,CAACE,IAAzB,CAAgCF,QAAvC,CACH,CAFD,CAEG,SAAUG,KAAV,CAAiB,CAChB;AACA,GAAIC,CAAAA,OAAJ,CACA,OAAQD,KAAK,CAACE,MAAd,EACI,IAAK,IAAL,CAAUD,OAAO,CAAG,uBAAV,CAAmC,MAC7C,IAAK,IAAL,CAAUA,OAAO,CAAG,qBAAV,CAAiC,MAC3C,IAAK,IAAL,CAAUA,OAAO,CAAG,wDAAV,CAAoE,MAC9E,QAASA,OAAO,CAAGD,KAAK,CAACC,OAAN,EAAiBD,KAA3B,CAJb,CAMA,MAAOG,CAAAA,OAAO,CAACC,MAAR,CAAeH,OAAf,CAAP,CACH,CAZD,EAcA;;;GAIA,GAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAChCjB,KAAK,CAACE,QAAN,CAAeG,OAAf,CAAuBa,MAAvB,CAA8B,eAA9B,EAAiD,UAAYD,KAA7D,CACH,CAFD,C,GAKME,CAAAA,S,2DAIFC,G,CAAM,SAACC,GAAD,CAAMC,MAAN,CAAiB,CACnB,MAAOtB,CAAAA,KAAK,CAACoB,GAAN,CAAUC,GAAV,CAAeC,MAAf,CAAP,CACH,C,MAKDC,M,CAAS,SAACF,GAAD,CAAMX,IAAN,CAAe,CACpB,MAAOV,CAAAA,KAAK,CAACM,IAAN,CAAWe,GAAX,CAAgBX,IAAhB,CAAP,CACH,C,MAKDc,M,CAAS,SAACH,GAAD,CAAMX,IAAN,CAAe,CACpB,MAAOV,CAAAA,KAAK,CAACyB,KAAN,CAAYJ,GAAZ,CAAiBX,IAAjB,CAAP,CACH,C,MAKDgB,M,CAAS,SAACL,GAAD,CAAS,CACd,MAAOrB,CAAAA,KAAK,CAAC2B,GAAN,CAAUN,GAAV,CAAP,CACH,C,GAGL,OAASF,SAAT,CAAoBH,gBAApB","sourcesContent":["import axios from 'axios';\nimport config from \"./../config\";\n\n\n// default\naxios.defaults.baseURL = config.API_URL;\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// intercepting to capture errors\naxios.interceptors.response.use(function (response) {\n    return response.data ? response.data : response;\n}, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    let message;\n    switch (error.status) {\n        case 500: message = 'Internal Server Error'; break;\n        case 401: message = 'Invalid credentials'; break;\n        case 404: message = \"Sorry! the data you are looking for could not be found\"; break;\n        default: message = error.message || error;\n    }\n    return Promise.reject(message);\n});\n\n/**\n * Sets the default authorization\n * @param {*} token \n */\nconst setAuthorization = (token) => {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n\n\nclass APIClient {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        return axios.get(url, params);\n    }\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    }\n\n    /**\n     * Updates data\n     */\n    update = (url, data) => {\n        return axios.patch(url, data);\n    }\n\n    /**\n     * Delete \n     */\n    delete = (url) => {\n        return axios.put(url);\n    }\n}\n\nexport { APIClient, setAuthorization };"]},"metadata":{},"sourceType":"module"}