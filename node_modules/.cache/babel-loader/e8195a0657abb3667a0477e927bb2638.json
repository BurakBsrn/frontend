{"ast":null,"code":"import _slicedToArray from\"/home/burak/projects/chat/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Button,Input,Row,Col,UncontrolledTooltip,ButtonDropdown,DropdownToggle,DropdownMenu,Label,Form}from\"reactstrap\";import{Picker}from'emoji-mart';import'emoji-mart/css/emoji-mart.css';function ChatInput(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),textMessage=_useState2[0],settextMessage=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOpen=_useState4[0],setisOpen=_useState4[1];var _useState5=useState({name:\"\",size:\"\"}),_useState6=_slicedToArray(_useState5,2),file=_useState6[0],setfile=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),fileImage=_useState8[0],setfileImage=_useState8[1];var toggle=function toggle(){return setisOpen(!isOpen);};//function for text input value change\nvar handleChange=function handleChange(e){settextMessage(e.target.value);};//function for add emojis\nvar addEmoji=function addEmoji(e){var emoji=e.native;settextMessage(textMessage+emoji);};//function for file input change\nvar handleFileChange=function handleFileChange(e){if(e.target.files.length!==0)setfile({name:e.target.files[0].name,size:e.target.files[0].size});};//function for image input change\nvar handleImageChange=function handleImageChange(e){if(e.target.files.length!==0)setfileImage(URL.createObjectURL(e.target.files[0]));};//function for send data to onaddMessage function(in userChat/index.js component)\nvar onaddMessage=function onaddMessage(e,textMessage){e.preventDefault();//if text value is not emptry then call onaddMessage function\nif(textMessage!==\"\"){props.onaddMessage(textMessage,\"textMessage\");settextMessage(\"\");}//if file input value is not empty then call onaddMessage function\nif(file.name!==\"\"){props.onaddMessage(file,\"fileMessage\");setfile({name:\"\",size:\"\"});}//if image input value is not empty then call onaddMessage function\nif(fileImage!==\"\"){props.onaddMessage(fileImage,\"imageMessage\");setfileImage(\"\");}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"p-3 p-lg-4 border-top mb-0\"},/*#__PURE__*/React.createElement(Form,{onSubmit:function onSubmit(e){return onaddMessage(e,textMessage);}},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Input,{type:\"text\",value:textMessage,onChange:handleChange,className:\"form-control form-control-lg bg-light border-light\",placeholder:\"Enter Message...\"}))),/*#__PURE__*/React.createElement(Col,{xs:\"auto\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat-input-links ml-md-2\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-inline mb-0\"},/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(ButtonDropdown,{className:\"emoji-dropdown\",direction:\"up\",isOpen:isOpen,toggle:toggle},/*#__PURE__*/React.createElement(DropdownToggle,{id:\"emoji\",color:\"link\",className:\"text-decoration-none font-size-16 btn-lg waves-effect\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-emotion-happy-line\"})),/*#__PURE__*/React.createElement(DropdownMenu,{className:\"dropdown-menu-lg-right\"},/*#__PURE__*/React.createElement(Picker,{onSelect:addEmoji}))),/*#__PURE__*/React.createElement(UncontrolledTooltip,{target:\"emoji\",placement:\"top\"},\"Emoji\")),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item input-file\"},/*#__PURE__*/React.createElement(Label,{id:\"files\",className:\"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-attachment-line\"}),/*#__PURE__*/React.createElement(Input,{onChange:function onChange(e){return handleFileChange(e);},type:\"file\",name:\"fileInput\",size:\"60\"})),/*#__PURE__*/React.createElement(UncontrolledTooltip,{target:\"files\",placement:\"top\"},\"Attached File\")),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item input-file\"},/*#__PURE__*/React.createElement(Label,{id:\"images\",className:\"mr-1 btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-image-fill\"}),/*#__PURE__*/React.createElement(Input,{onChange:function onChange(e){return handleImageChange(e);},accept:\"image/*\",type:\"file\",name:\"fileInput\",size:\"60\"})),/*#__PURE__*/React.createElement(UncontrolledTooltip,{target:\"images\",placement:\"top\"},\"Images\")),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\",className:\"font-size-16 btn-lg chat-send waves-effect waves-light\"},/*#__PURE__*/React.createElement(\"i\",{className:\"ri-send-plane-2-fill\"}))))))))));}export default ChatInput;","map":{"version":3,"sources":["/home/burak/projects/chat/frontend/src/pages/dashboard/UserChat/ChatInput.js"],"names":["React","useState","Button","Input","Row","Col","UncontrolledTooltip","ButtonDropdown","DropdownToggle","DropdownMenu","Label","Form","Picker","ChatInput","props","textMessage","settextMessage","isOpen","setisOpen","name","size","file","setfile","fileImage","setfileImage","toggle","handleChange","e","target","value","addEmoji","emoji","native","handleFileChange","files","length","handleImageChange","URL","createObjectURL","onaddMessage","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Input, Row, Col, UncontrolledTooltip, ButtonDropdown, DropdownToggle, DropdownMenu, Label, Form } from \"reactstrap\";\r\nimport { Picker } from 'emoji-mart'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\n\r\nfunction ChatInput(props) {\r\n    const [textMessage, settextMessage] = useState(\"\");\r\n    const [isOpen, setisOpen] = useState(false);\r\n    const [file, setfile] = useState({\r\n        name : \"\",\r\n        size : \"\"\r\n    });\r\n    const [fileImage, setfileImage] = useState(\"\")\r\n\r\n    const toggle = () => setisOpen(!isOpen);\r\n\r\n    //function for text input value change\r\n    const handleChange = e => {\r\n        settextMessage(e.target.value)\r\n    }\r\n\r\n    //function for add emojis\r\n    const addEmoji = e => {\r\n        let emoji = e.native;\r\n        settextMessage(textMessage+emoji)\r\n    };\r\n\r\n    //function for file input change\r\n    const handleFileChange = e => {\r\n        if(e.target.files.length !==0 )\r\n        setfile({\r\n            name : e.target.files[0].name,\r\n            size : e.target.files[0].size\r\n        })\r\n    }\r\n\r\n    //function for image input change\r\n    const handleImageChange = e => {\r\n        if(e.target.files.length !==0 )\r\n        setfileImage(URL.createObjectURL(e.target.files[0]))\r\n    }\r\n\r\n    //function for send data to onaddMessage function(in userChat/index.js component)\r\n    const onaddMessage = (e, textMessage) => {\r\n        e.preventDefault();\r\n        //if text value is not emptry then call onaddMessage function\r\n        if(textMessage !== \"\") {\r\n            props.onaddMessage(textMessage, \"textMessage\");\r\n            settextMessage(\"\");\r\n        }\r\n\r\n        //if file input value is not empty then call onaddMessage function\r\n        if(file.name !== \"\") {\r\n            props.onaddMessage(file, \"fileMessage\");\r\n            setfile({\r\n                name : \"\",\r\n                size : \"\"\r\n            })\r\n        }\r\n\r\n        //if image input value is not empty then call onaddMessage function\r\n        if(fileImage !== \"\") {\r\n            props.onaddMessage(fileImage, \"imageMessage\");\r\n            setfileImage(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"p-3 p-lg-4 border-top mb-0\">\r\n                            <Form onSubmit={(e) => onaddMessage(e, textMessage)} >\r\n                                <Row noGutters>\r\n                                    <Col>\r\n                                        <div>\r\n                                            <Input type=\"text\" value={textMessage} onChange={handleChange} className=\"form-control form-control-lg bg-light border-light\" placeholder=\"Enter Message...\" />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xs=\"auto\">\r\n                                        <div className=\"chat-input-links ml-md-2\">\r\n                                            <ul className=\"list-inline mb-0\">\r\n                                                <li className=\"list-inline-item\">\r\n                                                <ButtonDropdown className=\"emoji-dropdown\" direction=\"up\" isOpen={isOpen} toggle={toggle}>\r\n                                                    <DropdownToggle id=\"emoji\" color=\"link\" className=\"text-decoration-none font-size-16 btn-lg waves-effect\">\r\n                                                        <i className=\"ri-emotion-happy-line\"></i>\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu className=\"dropdown-menu-lg-right\">\r\n                                                        <Picker onSelect={addEmoji} />\r\n                                                    </DropdownMenu>\r\n                                                    </ButtonDropdown>\r\n                                                    <UncontrolledTooltip target=\"emoji\" placement=\"top\">\r\n                                                        Emoji\r\n                                                    </UncontrolledTooltip>\r\n                                                </li>\r\n                                                <li className=\"list-inline-item input-file\">\r\n                                                    <Label id=\"files\" className=\"btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\">\r\n                                                        <i className=\"ri-attachment-line\"></i>\r\n                                                    <Input onChange={(e) => handleFileChange(e)} type=\"file\" name=\"fileInput\" size=\"60\" />\r\n                                                    </Label>   \r\n                                                    <UncontrolledTooltip target=\"files\" placement=\"top\">\r\n                                                        Attached File\r\n                                                    </UncontrolledTooltip>\r\n                                                </li>\r\n                                                <li className=\"list-inline-item input-file\">\r\n                                                    <Label id=\"images\" className=\"mr-1 btn btn-link text-decoration-none font-size-16 btn-lg waves-effect\">\r\n                                                        <i className=\"ri-image-fill\"></i>\r\n                                                    <Input onChange={(e) => handleImageChange(e)} accept=\"image/*\" type=\"file\" name=\"fileInput\" size=\"60\" />\r\n                                                    </Label>   \r\n                                                    <UncontrolledTooltip target=\"images\" placement=\"top\">\r\n                                                        Images\r\n                                                    </UncontrolledTooltip>\r\n                                                </li>\r\n                                                <li className=\"list-inline-item\">\r\n                                                    <Button type=\"submit\" color=\"primary\" className=\"font-size-16 btn-lg chat-send waves-effect waves-light\">\r\n                                                        <i className=\"ri-send-plane-2-fill\"></i>\r\n                                                    </Button>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ChatInput;"]},"metadata":{},"sourceType":"module"}